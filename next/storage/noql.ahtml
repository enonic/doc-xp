<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="generator" content="Asciidoctor 2.0.23">
<title>NoQL reference</title>
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Open+Sans:300,300italic,400,400italic,600,600italic%7CNoto+Serif:400,400italic,700,700italic%7CDroid+Sans+Mono:400,700">
<style>
/*! Asciidoctor default stylesheet | MIT License | https://asciidoctor.org */
/* Uncomment the following line when using as a custom stylesheet */
/* @import "https://fonts.googleapis.com/css?family=Open+Sans:300,300italic,400,400italic,600,600italic%7CNoto+Serif:400,400italic,700,700italic%7CDroid+Sans+Mono:400,700"; */
html{font-family:sans-serif;-webkit-text-size-adjust:100%}
a{background:none}
a:focus{outline:thin dotted}
a:active,a:hover{outline:0}
h1{font-size:2em;margin:.67em 0}
b,strong{font-weight:bold}
abbr{font-size:.9em}
abbr[title]{cursor:help;border-bottom:1px dotted #dddddf;text-decoration:none}
dfn{font-style:italic}
hr{height:0}
mark{background:#ff0;color:#000}
code,kbd,pre,samp{font-family:monospace;font-size:1em}
pre{white-space:pre-wrap}
q{quotes:"\201C" "\201D" "\2018" "\2019"}
small{font-size:80%}
sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}
sup{top:-.5em}
sub{bottom:-.25em}
img{border:0}
svg:not(:root){overflow:hidden}
figure{margin:0}
audio,video{display:inline-block}
audio:not([controls]){display:none;height:0}
fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}
legend{border:0;padding:0}
button,input,select,textarea{font-family:inherit;font-size:100%;margin:0}
button,input{line-height:normal}
button,select{text-transform:none}
button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}
button[disabled],html input[disabled]{cursor:default}
input[type=checkbox],input[type=radio]{padding:0}
button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}
textarea{overflow:auto;vertical-align:top}
table{border-collapse:collapse;border-spacing:0}
*,::before,::after{box-sizing:border-box}
html,body{font-size:100%}
body{background:#fff;color:rgba(0,0,0,.8);padding:0;margin:0;font-family:"Noto Serif","DejaVu Serif",serif;line-height:1;position:relative;cursor:auto;-moz-tab-size:4;-o-tab-size:4;tab-size:4;word-wrap:anywhere;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased}
a:hover{cursor:pointer}
img,object,embed{max-width:100%;height:auto}
object,embed{height:100%}
img{-ms-interpolation-mode:bicubic}
.left{float:left!important}
.right{float:right!important}
.text-left{text-align:left!important}
.text-right{text-align:right!important}
.text-center{text-align:center!important}
.text-justify{text-align:justify!important}
.hide{display:none}
img,object,svg{display:inline-block;vertical-align:middle}
textarea{height:auto;min-height:50px}
select{width:100%}
.subheader,.admonitionblock td.content>.title,.audioblock>.title,.exampleblock>.title,.imageblock>.title,.listingblock>.title,.literalblock>.title,.stemblock>.title,.openblock>.title,.paragraph>.title,.quoteblock>.title,table.tableblock>.title,.verseblock>.title,.videoblock>.title,.dlist>.title,.olist>.title,.ulist>.title,.qlist>.title,.hdlist>.title{line-height:1.45;color:#7a2518;font-weight:400;margin-top:0;margin-bottom:.25em}
div,dl,dt,dd,ul,ol,li,h1,h2,h3,#toctitle,.sidebarblock>.content>.title,h4,h5,h6,pre,form,p,blockquote,th,td{margin:0;padding:0}
a{color:#2156a5;text-decoration:underline;line-height:inherit}
a:hover,a:focus{color:#1d4b8f}
a img{border:0}
p{line-height:1.6;margin-bottom:1.25em;text-rendering:optimizeLegibility}
p aside{font-size:.875em;line-height:1.35;font-style:italic}
h1,h2,h3,#toctitle,.sidebarblock>.content>.title,h4,h5,h6{font-family:"Open Sans","DejaVu Sans",sans-serif;font-weight:300;font-style:normal;color:#ba3925;text-rendering:optimizeLegibility;margin-top:1em;margin-bottom:.5em;line-height:1.0125em}
h1 small,h2 small,h3 small,#toctitle small,.sidebarblock>.content>.title small,h4 small,h5 small,h6 small{font-size:60%;color:#e99b8f;line-height:0}
h1{font-size:2.125em}
h2{font-size:1.6875em}
h3,#toctitle,.sidebarblock>.content>.title{font-size:1.375em}
h4,h5{font-size:1.125em}
h6{font-size:1em}
hr{border:solid #dddddf;border-width:1px 0 0;clear:both;margin:1.25em 0 1.1875em}
em,i{font-style:italic;line-height:inherit}
strong,b{font-weight:bold;line-height:inherit}
small{font-size:60%;line-height:inherit}
code{font-family:"Droid Sans Mono","DejaVu Sans Mono",monospace;font-weight:400;color:rgba(0,0,0,.9)}
ul,ol,dl{line-height:1.6;margin-bottom:1.25em;list-style-position:outside;font-family:inherit}
ul,ol{margin-left:1.5em}
ul li ul,ul li ol{margin-left:1.25em;margin-bottom:0}
ul.circle{list-style-type:circle}
ul.disc{list-style-type:disc}
ul.square{list-style-type:square}
ul.circle ul:not([class]),ul.disc ul:not([class]),ul.square ul:not([class]){list-style:inherit}
ol li ul,ol li ol{margin-left:1.25em;margin-bottom:0}
dl dt{margin-bottom:.3125em;font-weight:bold}
dl dd{margin-bottom:1.25em}
blockquote{margin:0 0 1.25em;padding:.5625em 1.25em 0 1.1875em;border-left:1px solid #ddd}
blockquote,blockquote p{line-height:1.6;color:rgba(0,0,0,.85)}
@media screen and (min-width:768px){h1,h2,h3,#toctitle,.sidebarblock>.content>.title,h4,h5,h6{line-height:1.2}
h1{font-size:2.75em}
h2{font-size:2.3125em}
h3,#toctitle,.sidebarblock>.content>.title{font-size:1.6875em}
h4{font-size:1.4375em}}
table{background:#fff;margin-bottom:1.25em;border:1px solid #dedede;word-wrap:normal}
table thead,table tfoot{background:#f7f8f7}
table thead tr th,table thead tr td,table tfoot tr th,table tfoot tr td{padding:.5em .625em .625em;font-size:inherit;color:rgba(0,0,0,.8);text-align:left}
table tr th,table tr td{padding:.5625em .625em;font-size:inherit;color:rgba(0,0,0,.8)}
table tr.even,table tr.alt{background:#f8f8f7}
table thead tr th,table tfoot tr th,table tbody tr td,table tr td,table tfoot tr td{line-height:1.6}
h1,h2,h3,#toctitle,.sidebarblock>.content>.title,h4,h5,h6{line-height:1.2;word-spacing:-.05em}
h1 strong,h2 strong,h3 strong,#toctitle strong,.sidebarblock>.content>.title strong,h4 strong,h5 strong,h6 strong{font-weight:400}
.center{margin-left:auto;margin-right:auto}
.stretch{width:100%}
.clearfix::before,.clearfix::after,.float-group::before,.float-group::after{content:" ";display:table}
.clearfix::after,.float-group::after{clear:both}
:not(pre).nobreak{word-wrap:normal}
:not(pre).nowrap{white-space:nowrap}
:not(pre).pre-wrap{white-space:pre-wrap}
:not(pre):not([class^=L])>code{font-size:.9375em;font-style:normal!important;letter-spacing:0;padding:.1em .5ex;word-spacing:-.15em;background:#f7f7f8;border-radius:4px;line-height:1.45;text-rendering:optimizeSpeed}
pre{color:rgba(0,0,0,.9);font-family:"Droid Sans Mono","DejaVu Sans Mono",monospace;line-height:1.45;text-rendering:optimizeSpeed}
pre code,pre pre{color:inherit;font-size:inherit;line-height:inherit}
pre>code{display:block}
pre.nowrap,pre.nowrap pre{white-space:pre;word-wrap:normal}
em em{font-style:normal}
strong strong{font-weight:400}
.keyseq{color:rgba(51,51,51,.8)}
kbd{font-family:"Droid Sans Mono","DejaVu Sans Mono",monospace;display:inline-block;color:rgba(0,0,0,.8);font-size:.65em;line-height:1.45;background:#f7f7f7;border:1px solid #ccc;border-radius:3px;box-shadow:0 1px 0 rgba(0,0,0,.2),inset 0 0 0 .1em #fff;margin:0 .15em;padding:.2em .5em;vertical-align:middle;position:relative;top:-.1em;white-space:nowrap}
.keyseq kbd:first-child{margin-left:0}
.keyseq kbd:last-child{margin-right:0}
.menuseq,.menuref{color:#000}
.menuseq b:not(.caret),.menuref{font-weight:inherit}
.menuseq{word-spacing:-.02em}
.menuseq b.caret{font-size:1.25em;line-height:.8}
.menuseq i.caret{font-weight:bold;text-align:center;width:.45em}
b.button::before,b.button::after{position:relative;top:-1px;font-weight:400}
b.button::before{content:"[";padding:0 3px 0 2px}
b.button::after{content:"]";padding:0 2px 0 3px}
p a>code:hover{color:rgba(0,0,0,.9)}
#header,#content,#footnotes,#footer{width:100%;margin:0 auto;max-width:62.5em;*zoom:1;position:relative;padding-left:.9375em;padding-right:.9375em}
#header::before,#header::after,#content::before,#content::after,#footnotes::before,#footnotes::after,#footer::before,#footer::after{content:" ";display:table}
#header::after,#content::after,#footnotes::after,#footer::after{clear:both}
#content{margin-top:1.25em}
#content::before{content:none}
#header>h1:first-child{color:rgba(0,0,0,.85);margin-top:2.25rem;margin-bottom:0}
#header>h1:first-child+#toc{margin-top:8px;border-top:1px solid #dddddf}
#header>h1:only-child{border-bottom:1px solid #dddddf;padding-bottom:8px}
#header .details{border-bottom:1px solid #dddddf;line-height:1.45;padding-top:.25em;padding-bottom:.25em;padding-left:.25em;color:rgba(0,0,0,.6);display:flex;flex-flow:row wrap}
#header .details span:first-child{margin-left:-.125em}
#header .details span.email a{color:rgba(0,0,0,.85)}
#header .details br{display:none}
#header .details br+span::before{content:"\00a0\2013\00a0"}
#header .details br+span.author::before{content:"\00a0\22c5\00a0";color:rgba(0,0,0,.85)}
#header .details br+span#revremark::before{content:"\00a0|\00a0"}
#header #revnumber{text-transform:capitalize}
#header #revnumber::after{content:"\00a0"}
#content>h1:first-child:not([class]){color:rgba(0,0,0,.85);border-bottom:1px solid #dddddf;padding-bottom:8px;margin-top:0;padding-top:1rem;margin-bottom:1.25rem}
#toc{border-bottom:1px solid #e7e7e9;padding-bottom:.5em}
#toc>ul{margin-left:.125em}
#toc ul.sectlevel0>li>a{font-style:italic}
#toc ul.sectlevel0 ul.sectlevel1{margin:.5em 0}
#toc ul{font-family:"Open Sans","DejaVu Sans",sans-serif;list-style-type:none}
#toc li{line-height:1.3334;margin-top:.3334em}
#toc a{text-decoration:none}
#toc a:active{text-decoration:underline}
#toctitle{color:#7a2518;font-size:1.2em}
@media screen and (min-width:768px){#toctitle{font-size:1.375em}
body.toc2{padding-left:15em;padding-right:0}
body.toc2 #header>h1:nth-last-child(2){border-bottom:1px solid #dddddf;padding-bottom:8px}
#toc.toc2{margin-top:0!important;background:#f8f8f7;position:fixed;width:15em;left:0;top:0;border-right:1px solid #e7e7e9;border-top-width:0!important;border-bottom-width:0!important;z-index:1000;padding:1.25em 1em;height:100%;overflow:auto}
#toc.toc2 #toctitle{margin-top:0;margin-bottom:.8rem;font-size:1.2em}
#toc.toc2>ul{font-size:.9em;margin-bottom:0}
#toc.toc2 ul ul{margin-left:0;padding-left:1em}
#toc.toc2 ul.sectlevel0 ul.sectlevel1{padding-left:0;margin-top:.5em;margin-bottom:.5em}
body.toc2.toc-right{padding-left:0;padding-right:15em}
body.toc2.toc-right #toc.toc2{border-right-width:0;border-left:1px solid #e7e7e9;left:auto;right:0}}
@media screen and (min-width:1280px){body.toc2{padding-left:20em;padding-right:0}
#toc.toc2{width:20em}
#toc.toc2 #toctitle{font-size:1.375em}
#toc.toc2>ul{font-size:.95em}
#toc.toc2 ul ul{padding-left:1.25em}
body.toc2.toc-right{padding-left:0;padding-right:20em}}
#content #toc{border:1px solid #e0e0dc;margin-bottom:1.25em;padding:1.25em;background:#f8f8f7;border-radius:4px}
#content #toc>:first-child{margin-top:0}
#content #toc>:last-child{margin-bottom:0}
#footer{max-width:none;background:rgba(0,0,0,.8);padding:1.25em}
#footer-text{color:hsla(0,0%,100%,.8);line-height:1.44}
#content{margin-bottom:.625em}
.sect1{padding-bottom:.625em}
@media screen and (min-width:768px){#content{margin-bottom:1.25em}
.sect1{padding-bottom:1.25em}}
.sect1:last-child{padding-bottom:0}
.sect1+.sect1{border-top:1px solid #e7e7e9}
#content h1>a.anchor,h2>a.anchor,h3>a.anchor,#toctitle>a.anchor,.sidebarblock>.content>.title>a.anchor,h4>a.anchor,h5>a.anchor,h6>a.anchor{position:absolute;z-index:1001;width:1.5ex;margin-left:-1.5ex;display:block;text-decoration:none!important;visibility:hidden;text-align:center;font-weight:400}
#content h1>a.anchor::before,h2>a.anchor::before,h3>a.anchor::before,#toctitle>a.anchor::before,.sidebarblock>.content>.title>a.anchor::before,h4>a.anchor::before,h5>a.anchor::before,h6>a.anchor::before{content:"\00A7";font-size:.85em;display:block;padding-top:.1em}
#content h1:hover>a.anchor,#content h1>a.anchor:hover,h2:hover>a.anchor,h2>a.anchor:hover,h3:hover>a.anchor,#toctitle:hover>a.anchor,.sidebarblock>.content>.title:hover>a.anchor,h3>a.anchor:hover,#toctitle>a.anchor:hover,.sidebarblock>.content>.title>a.anchor:hover,h4:hover>a.anchor,h4>a.anchor:hover,h5:hover>a.anchor,h5>a.anchor:hover,h6:hover>a.anchor,h6>a.anchor:hover{visibility:visible}
#content h1>a.link,h2>a.link,h3>a.link,#toctitle>a.link,.sidebarblock>.content>.title>a.link,h4>a.link,h5>a.link,h6>a.link{color:#ba3925;text-decoration:none}
#content h1>a.link:hover,h2>a.link:hover,h3>a.link:hover,#toctitle>a.link:hover,.sidebarblock>.content>.title>a.link:hover,h4>a.link:hover,h5>a.link:hover,h6>a.link:hover{color:#a53221}
details,.audioblock,.imageblock,.literalblock,.listingblock,.stemblock,.videoblock{margin-bottom:1.25em}
details{margin-left:1.25rem}
details>summary{cursor:pointer;display:block;position:relative;line-height:1.6;margin-bottom:.625rem;outline:none;-webkit-tap-highlight-color:transparent}
details>summary::-webkit-details-marker{display:none}
details>summary::before{content:"";border:solid transparent;border-left:solid;border-width:.3em 0 .3em .5em;position:absolute;top:.5em;left:-1.25rem;transform:translateX(15%)}
details[open]>summary::before{border:solid transparent;border-top:solid;border-width:.5em .3em 0;transform:translateY(15%)}
details>summary::after{content:"";width:1.25rem;height:1em;position:absolute;top:.3em;left:-1.25rem}
.admonitionblock td.content>.title,.audioblock>.title,.exampleblock>.title,.imageblock>.title,.listingblock>.title,.literalblock>.title,.stemblock>.title,.openblock>.title,.paragraph>.title,.quoteblock>.title,table.tableblock>.title,.verseblock>.title,.videoblock>.title,.dlist>.title,.olist>.title,.ulist>.title,.qlist>.title,.hdlist>.title{text-rendering:optimizeLegibility;text-align:left;font-family:"Noto Serif","DejaVu Serif",serif;font-size:1rem;font-style:italic}
table.tableblock.fit-content>caption.title{white-space:nowrap;width:0}
.paragraph.lead>p,#preamble>.sectionbody>[class=paragraph]:first-of-type p{font-size:1.21875em;line-height:1.6;color:rgba(0,0,0,.85)}
.admonitionblock>table{border-collapse:separate;border:0;background:none;width:100%}
.admonitionblock>table td.icon{text-align:center;width:80px}
.admonitionblock>table td.icon img{max-width:none}
.admonitionblock>table td.icon .title{font-weight:bold;font-family:"Open Sans","DejaVu Sans",sans-serif;text-transform:uppercase}
.admonitionblock>table td.content{padding-left:1.125em;padding-right:1.25em;border-left:1px solid #dddddf;color:rgba(0,0,0,.6);word-wrap:anywhere}
.admonitionblock>table td.content>:last-child>:last-child{margin-bottom:0}
.exampleblock>.content{border:1px solid #e6e6e6;margin-bottom:1.25em;padding:1.25em;background:#fff;border-radius:4px}
.sidebarblock{border:1px solid #dbdbd6;margin-bottom:1.25em;padding:1.25em;background:#f3f3f2;border-radius:4px}
.sidebarblock>.content>.title{color:#7a2518;margin-top:0;text-align:center}
.exampleblock>.content>:first-child,.sidebarblock>.content>:first-child{margin-top:0}
.exampleblock>.content>:last-child,.exampleblock>.content>:last-child>:last-child,.exampleblock>.content .olist>ol>li:last-child>:last-child,.exampleblock>.content .ulist>ul>li:last-child>:last-child,.exampleblock>.content .qlist>ol>li:last-child>:last-child,.sidebarblock>.content>:last-child,.sidebarblock>.content>:last-child>:last-child,.sidebarblock>.content .olist>ol>li:last-child>:last-child,.sidebarblock>.content .ulist>ul>li:last-child>:last-child,.sidebarblock>.content .qlist>ol>li:last-child>:last-child{margin-bottom:0}
.literalblock pre,.listingblock>.content>pre{border-radius:4px;overflow-x:auto;padding:1em;font-size:.8125em}
@media screen and (min-width:768px){.literalblock pre,.listingblock>.content>pre{font-size:.90625em}}
@media screen and (min-width:1280px){.literalblock pre,.listingblock>.content>pre{font-size:1em}}
.literalblock pre,.listingblock>.content>pre:not(.highlight),.listingblock>.content>pre[class=highlight],.listingblock>.content>pre[class^="highlight "]{background:#f7f7f8}
.literalblock.output pre{color:#f7f7f8;background:rgba(0,0,0,.9)}
.listingblock>.content{position:relative}
.listingblock code[data-lang]::before{display:none;content:attr(data-lang);position:absolute;font-size:.75em;top:.425rem;right:.5rem;line-height:1;text-transform:uppercase;color:inherit;opacity:.5}
.listingblock:hover code[data-lang]::before{display:block}
.listingblock.terminal pre .command::before{content:attr(data-prompt);padding-right:.5em;color:inherit;opacity:.5}
.listingblock.terminal pre .command:not([data-prompt])::before{content:"$"}
.listingblock pre.highlightjs{padding:0}
.listingblock pre.highlightjs>code{padding:1em;border-radius:4px}
.listingblock pre.prettyprint{border-width:0}
.prettyprint{background:#f7f7f8}
pre.prettyprint .linenums{line-height:1.45;margin-left:2em}
pre.prettyprint li{background:none;list-style-type:inherit;padding-left:0}
pre.prettyprint li code[data-lang]::before{opacity:1}
pre.prettyprint li:not(:first-child) code[data-lang]::before{display:none}
table.linenotable{border-collapse:separate;border:0;margin-bottom:0;background:none}
table.linenotable td[class]{color:inherit;vertical-align:top;padding:0;line-height:inherit;white-space:normal}
table.linenotable td.code{padding-left:.75em}
table.linenotable td.linenos,pre.pygments .linenos{border-right:1px solid;opacity:.35;padding-right:.5em;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}
pre.pygments span.linenos{display:inline-block;margin-right:.75em}
.quoteblock{margin:0 1em 1.25em 1.5em;display:table}
.quoteblock:not(.excerpt)>.title{margin-left:-1.5em;margin-bottom:.75em}
.quoteblock blockquote,.quoteblock p{color:rgba(0,0,0,.85);font-size:1.15rem;line-height:1.75;word-spacing:.1em;letter-spacing:0;font-style:italic;text-align:justify}
.quoteblock blockquote{margin:0;padding:0;border:0}
.quoteblock blockquote::before{content:"\201c";float:left;font-size:2.75em;font-weight:bold;line-height:.6em;margin-left:-.6em;color:#7a2518;text-shadow:0 1px 2px rgba(0,0,0,.1)}
.quoteblock blockquote>.paragraph:last-child p{margin-bottom:0}
.quoteblock .attribution{margin-top:.75em;margin-right:.5ex;text-align:right}
.verseblock{margin:0 1em 1.25em}
.verseblock pre{font-family:"Open Sans","DejaVu Sans",sans-serif;font-size:1.15rem;color:rgba(0,0,0,.85);font-weight:300;text-rendering:optimizeLegibility}
.verseblock pre strong{font-weight:400}
.verseblock .attribution{margin-top:1.25rem;margin-left:.5ex}
.quoteblock .attribution,.verseblock .attribution{font-size:.9375em;line-height:1.45;font-style:italic}
.quoteblock .attribution br,.verseblock .attribution br{display:none}
.quoteblock .attribution cite,.verseblock .attribution cite{display:block;letter-spacing:-.025em;color:rgba(0,0,0,.6)}
.quoteblock.abstract blockquote::before,.quoteblock.excerpt blockquote::before,.quoteblock .quoteblock blockquote::before{display:none}
.quoteblock.abstract blockquote,.quoteblock.abstract p,.quoteblock.excerpt blockquote,.quoteblock.excerpt p,.quoteblock .quoteblock blockquote,.quoteblock .quoteblock p{line-height:1.6;word-spacing:0}
.quoteblock.abstract{margin:0 1em 1.25em;display:block}
.quoteblock.abstract>.title{margin:0 0 .375em;font-size:1.15em;text-align:center}
.quoteblock.excerpt>blockquote,.quoteblock .quoteblock{padding:0 0 .25em 1em;border-left:.25em solid #dddddf}
.quoteblock.excerpt,.quoteblock .quoteblock{margin-left:0}
.quoteblock.excerpt blockquote,.quoteblock.excerpt p,.quoteblock .quoteblock blockquote,.quoteblock .quoteblock p{color:inherit;font-size:1.0625rem}
.quoteblock.excerpt .attribution,.quoteblock .quoteblock .attribution{color:inherit;font-size:.85rem;text-align:left;margin-right:0}
p.tableblock:last-child{margin-bottom:0}
td.tableblock>.content{margin-bottom:1.25em;word-wrap:anywhere}
td.tableblock>.content>:last-child{margin-bottom:-1.25em}
table.tableblock,th.tableblock,td.tableblock{border:0 solid #dedede}
table.grid-all>*>tr>*{border-width:1px}
table.grid-cols>*>tr>*{border-width:0 1px}
table.grid-rows>*>tr>*{border-width:1px 0}
table.frame-all{border-width:1px}
table.frame-ends{border-width:1px 0}
table.frame-sides{border-width:0 1px}
table.frame-none>colgroup+*>:first-child>*,table.frame-sides>colgroup+*>:first-child>*{border-top-width:0}
table.frame-none>:last-child>:last-child>*,table.frame-sides>:last-child>:last-child>*{border-bottom-width:0}
table.frame-none>*>tr>:first-child,table.frame-ends>*>tr>:first-child{border-left-width:0}
table.frame-none>*>tr>:last-child,table.frame-ends>*>tr>:last-child{border-right-width:0}
table.stripes-all>*>tr,table.stripes-odd>*>tr:nth-of-type(odd),table.stripes-even>*>tr:nth-of-type(even),table.stripes-hover>*>tr:hover{background:#f8f8f7}
th.halign-left,td.halign-left{text-align:left}
th.halign-right,td.halign-right{text-align:right}
th.halign-center,td.halign-center{text-align:center}
th.valign-top,td.valign-top{vertical-align:top}
th.valign-bottom,td.valign-bottom{vertical-align:bottom}
th.valign-middle,td.valign-middle{vertical-align:middle}
table thead th,table tfoot th{font-weight:bold}
tbody tr th{background:#f7f8f7}
tbody tr th,tbody tr th p,tfoot tr th,tfoot tr th p{color:rgba(0,0,0,.8);font-weight:bold}
p.tableblock>code:only-child{background:none;padding:0}
p.tableblock{font-size:1em}
ol{margin-left:1.75em}
ul li ol{margin-left:1.5em}
dl dd{margin-left:1.125em}
dl dd:last-child,dl dd:last-child>:last-child{margin-bottom:0}
li p,ul dd,ol dd,.olist .olist,.ulist .ulist,.ulist .olist,.olist .ulist{margin-bottom:.625em}
ul.checklist,ul.none,ol.none,ul.no-bullet,ol.no-bullet,ol.unnumbered,ul.unstyled,ol.unstyled{list-style-type:none}
ul.no-bullet,ol.no-bullet,ol.unnumbered{margin-left:.625em}
ul.unstyled,ol.unstyled{margin-left:0}
li>p:empty:only-child::before{content:"";display:inline-block}
ul.checklist>li>p:first-child{margin-left:-1em}
ul.checklist>li>p:first-child>.fa-square-o:first-child,ul.checklist>li>p:first-child>.fa-check-square-o:first-child{width:1.25em;font-size:.8em;position:relative;bottom:.125em}
ul.checklist>li>p:first-child>input[type=checkbox]:first-child{margin-right:.25em}
ul.inline{display:flex;flex-flow:row wrap;list-style:none;margin:0 0 .625em -1.25em}
ul.inline>li{margin-left:1.25em}
.unstyled dl dt{font-weight:400;font-style:normal}
ol.arabic{list-style-type:decimal}
ol.decimal{list-style-type:decimal-leading-zero}
ol.loweralpha{list-style-type:lower-alpha}
ol.upperalpha{list-style-type:upper-alpha}
ol.lowerroman{list-style-type:lower-roman}
ol.upperroman{list-style-type:upper-roman}
ol.lowergreek{list-style-type:lower-greek}
.hdlist>table,.colist>table{border:0;background:none}
.hdlist>table>tbody>tr,.colist>table>tbody>tr{background:none}
td.hdlist1,td.hdlist2{vertical-align:top;padding:0 .625em}
td.hdlist1{font-weight:bold;padding-bottom:1.25em}
td.hdlist2{word-wrap:anywhere}
.literalblock+.colist,.listingblock+.colist{margin-top:-.5em}
.colist td:not([class]):first-child{padding:.4em .75em 0;line-height:1;vertical-align:top}
.colist td:not([class]):first-child img{max-width:none}
.colist td:not([class]):last-child{padding:.25em 0}
.thumb,.th{line-height:0;display:inline-block;border:4px solid #fff;box-shadow:0 0 0 1px #ddd}
.imageblock.left{margin:.25em .625em 1.25em 0}
.imageblock.right{margin:.25em 0 1.25em .625em}
.imageblock>.title{margin-bottom:0}
.imageblock.thumb,.imageblock.th{border-width:6px}
.imageblock.thumb>.title,.imageblock.th>.title{padding:0 .125em}
.image.left,.image.right{margin-top:.25em;margin-bottom:.25em;display:inline-block;line-height:0}
.image.left{margin-right:.625em}
.image.right{margin-left:.625em}
a.image{text-decoration:none;display:inline-block}
a.image object{pointer-events:none}
sup.footnote,sup.footnoteref{font-size:.875em;position:static;vertical-align:super}
sup.footnote a,sup.footnoteref a{text-decoration:none}
sup.footnote a:active,sup.footnoteref a:active,#footnotes .footnote a:first-of-type:active{text-decoration:underline}
#footnotes{padding-top:.75em;padding-bottom:.75em;margin-bottom:.625em}
#footnotes hr{width:20%;min-width:6.25em;margin:-.25em 0 .75em;border-width:1px 0 0}
#footnotes .footnote{padding:0 .375em 0 .225em;line-height:1.3334;font-size:.875em;margin-left:1.2em;margin-bottom:.2em}
#footnotes .footnote a:first-of-type{font-weight:bold;text-decoration:none;margin-left:-1.05em}
#footnotes .footnote:last-of-type{margin-bottom:0}
#content #footnotes{margin-top:-.625em;margin-bottom:0;padding:.75em 0}
div.unbreakable{page-break-inside:avoid}
.big{font-size:larger}
.small{font-size:smaller}
.underline{text-decoration:underline}
.overline{text-decoration:overline}
.line-through{text-decoration:line-through}
.aqua{color:#00bfbf}
.aqua-background{background:#00fafa}
.black{color:#000}
.black-background{background:#000}
.blue{color:#0000bf}
.blue-background{background:#0000fa}
.fuchsia{color:#bf00bf}
.fuchsia-background{background:#fa00fa}
.gray{color:#606060}
.gray-background{background:#7d7d7d}
.green{color:#006000}
.green-background{background:#007d00}
.lime{color:#00bf00}
.lime-background{background:#00fa00}
.maroon{color:#600000}
.maroon-background{background:#7d0000}
.navy{color:#000060}
.navy-background{background:#00007d}
.olive{color:#606000}
.olive-background{background:#7d7d00}
.purple{color:#600060}
.purple-background{background:#7d007d}
.red{color:#bf0000}
.red-background{background:#fa0000}
.silver{color:#909090}
.silver-background{background:#bcbcbc}
.teal{color:#006060}
.teal-background{background:#007d7d}
.white{color:#bfbfbf}
.white-background{background:#fafafa}
.yellow{color:#bfbf00}
.yellow-background{background:#fafa00}
span.icon>.fa{cursor:default}
a span.icon>.fa{cursor:inherit}
.admonitionblock td.icon [class^="fa icon-"]{font-size:2.5em;text-shadow:1px 1px 2px rgba(0,0,0,.5);cursor:default}
.admonitionblock td.icon .icon-note::before{content:"\f05a";color:#19407c}
.admonitionblock td.icon .icon-tip::before{content:"\f0eb";text-shadow:1px 1px 2px rgba(155,155,0,.8);color:#111}
.admonitionblock td.icon .icon-warning::before{content:"\f071";color:#bf6900}
.admonitionblock td.icon .icon-caution::before{content:"\f06d";color:#bf3400}
.admonitionblock td.icon .icon-important::before{content:"\f06a";color:#bf0000}
.conum[data-value]{display:inline-block;color:#fff!important;background:rgba(0,0,0,.8);border-radius:50%;text-align:center;font-size:.75em;width:1.67em;height:1.67em;line-height:1.67em;font-family:"Open Sans","DejaVu Sans",sans-serif;font-style:normal;font-weight:bold}
.conum[data-value] *{color:#fff!important}
.conum[data-value]+b{display:none}
.conum[data-value]::after{content:attr(data-value)}
pre .conum[data-value]{position:relative;top:-.125em}
b.conum *{color:inherit!important}
.conum:not([data-value]):empty{display:none}
dt,th.tableblock,td.content,div.footnote{text-rendering:optimizeLegibility}
h1,h2,p,td.content,span.alt,summary{letter-spacing:-.01em}
p strong,td.content strong,div.footnote strong{letter-spacing:-.005em}
p,blockquote,dt,td.content,td.hdlist1,span.alt,summary{font-size:1.0625rem}
p{margin-bottom:1.25rem}
.sidebarblock p,.sidebarblock dt,.sidebarblock td.content,p.tableblock{font-size:1em}
.exampleblock>.content{background:#fffef7;border-color:#e0e0dc;box-shadow:0 1px 4px #e0e0dc}
.print-only{display:none!important}
@page{margin:1.25cm .75cm}
@media print{*{box-shadow:none!important;text-shadow:none!important}
html{font-size:80%}
a{color:inherit!important;text-decoration:underline!important}
a.bare,a[href^="#"],a[href^="mailto:"]{text-decoration:none!important}
a[href^="http:"]:not(.bare)::after,a[href^="https:"]:not(.bare)::after{content:"(" attr(href) ")";display:inline-block;font-size:.875em;padding-left:.25em}
abbr[title]{border-bottom:1px dotted}
abbr[title]::after{content:" (" attr(title) ")"}
pre,blockquote,tr,img,object,svg{page-break-inside:avoid}
thead{display:table-header-group}
svg{max-width:100%}
p,blockquote,dt,td.content{font-size:1em;orphans:3;widows:3}
h2,h3,#toctitle,.sidebarblock>.content>.title{page-break-after:avoid}
#header,#content,#footnotes,#footer{max-width:none}
#toc,.sidebarblock,.exampleblock>.content{background:none!important}
#toc{border-bottom:1px solid #dddddf!important;padding-bottom:0!important}
body.book #header{text-align:center}
body.book #header>h1:first-child{border:0!important;margin:2.5em 0 1em}
body.book #header .details{border:0!important;display:block;padding:0!important}
body.book #header .details span:first-child{margin-left:0!important}
body.book #header .details br{display:block}
body.book #header .details br+span::before{content:none!important}
body.book #toc{border:0!important;text-align:left!important;padding:0!important;margin:0!important}
body.book #toc,body.book #preamble,body.book h1.sect0,body.book .sect1>h2{page-break-before:always}
.listingblock code[data-lang]::before{display:block}
#footer{padding:0 .9375em}
.hide-on-print{display:none!important}
.print-only{display:block!important}
.hide-for-print{display:none!important}
.show-for-print{display:inherit!important}}
@media amzn-kf8,print{#header>h1:first-child{margin-top:1.25rem}
.sect1{padding:0!important}
.sect1+.sect1{border:0}
#footer{background:none}
#footer-text{color:rgba(0,0,0,.6);font-size:.9em}}
@media amzn-kf8{#header,#content,#footnotes,#footer{padding:0}}
</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
</head>
<body class="article toc2 toc-right">
<div id="header">
<h1>NoQL reference</h1>
<div id="toc" class="toc2">
<div id="toctitle">Table of Contents</div>
<ul class="sectlevel1">
<li><a href="#introduction">Introduction</a></li>
<li><a href="#query">Query</a>
<ul class="sectlevel2">
<li><a href="#query_dsl">Query DSL</a></li>
<li><a href="#string_query">String Query</a></li>
<li><a href="#syntax">Syntax</a></li>
<li><a href="#query_functions">Query functions</a></li>
</ul>
</li>
<li><a href="#sort">Sort</a>
<ul class="sectlevel2">
<li><a href="#syntax_2">Syntax</a></li>
<li><a href="#sort_functions">Sort functions</a></li>
<li><a href="#relevance_sorting">Relevance sorting</a></li>
<li><a href="#sort_dsl">Sort DSL</a></li>
</ul>
</li>
<li><a href="#more_examples">More examples</a>
<ul class="sectlevel2">
<li><a href="#querying_paths">Querying paths</a></li>
<li><a href="#querying_missing_values">Querying missing values</a></li>
<li><a href="#querying_references">Querying references</a></li>
<li><a href="#date_and_time">Date and time</a></li>
</ul>
</li>
</ul>
</div>
</div>
<div id="content">
<div class="sect1">
<h2 id="introduction"><a class="link" href="#introduction">Introduction</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>The Node Query Language, or NoQL for short, is inspired by traditional SQL.
As with other NoSQL solutions, it has special capabilities and limitations.</p>
</div>
<div class="paragraph">
<p>Selectors, joins and update statements are essentially <em>not</em> supported.
However, NoQL adds cool features like <a href="#relevance_sorting">relevance sorting</a> and <a href="aggregations.ahtml">aggregations</a>.</p>
</div>
<div class="paragraph">
<p>Selectors are currently not supported, and the only result of a query will only be identifiers for the matching nodes.
Developers must then get the desired nodes (with their data) through a separate request.</p>
</div>
<div class="paragraph">
<p>A NoQL statement is essentially composed from two parts: <a href="#query">query</a>, and <a href="#sort">sorting</a>.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="query"><a class="link" href="#query">Query</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>Queries are just one of the ways to access data in the storage. Developers may also access nodes by ID, path or by fetching child items.
A query normally targets a single repository, but may also query multiple repositories at once.</p>
</div>
<div class="paragraph">
<p>There are two types of query&#8217;s format available in XP: String format and DSL (Domain Specific Language).</p>
</div>
<div class="sect2">
<h3 id="query_dsl"><a class="link" href="#query_dsl">Query DSL</a></h3>
<div class="paragraph">
<p><span class="image"><span class="alt">XP 7.9.0</span></span></p>
</div>
<div class="paragraph">
<p>Query DSL is an AST (Abstract Syntax Tree) expressed in JSON to define query expressions. See <a href="dsl.ahtml">documentation</a> for further explanation and examples.</p>
</div>
</div>
<div class="sect2">
<h3 id="string_query"><a class="link" href="#string_query">String Query</a></h3>
<div class="paragraph">
<p>String queries are built from traditional expressions.
For instance, the following query would return all nodes in the repo, where the property <code>weight</code> is greater than 10.</p>
</div>
<div class="literalblock">
<div class="content">
<pre>weight &gt; 10</pre>
</div>
</div>
<div class="paragraph">
<p>Expressions may be combined by using traditional logical operators such as AND, and OR.
For instance, we could limit the result further:</p>
</div>
<div class="literalblock">
<div class="content">
<pre>weight &gt; 10 AND fulltext('article', 'should have these words', 'AND')</pre>
</div>
</div>
<div class="paragraph">
<p>In this case we are adding a so-called dynamic expression to the query.
The fulltext() expression performs a free text search on the property <code>article</code> for the specified search string.</p>
</div>
<div class="paragraph">
<p>For both the integer comparison and fulltext expression to work, the weight, and article properties need to be <a href="indexing.ahtml">indexed</a> properly.</p>
</div>
<div class="paragraph">
<p>If the query is empty, all nodes will be considered matches and returned.</p>
</div>
<div class="paragraph">
<p>The results matching a given query will be assigned a score. The scoring is for instance used to achieve relevance sorting.</p>
</div>
</div>
<div class="sect2">
<h3 id="syntax"><a class="link" href="#syntax">Syntax</a></h3>
<div class="paragraph">
<p>The query syntax is based on SQL and looks very similar:</p>
</div>
<div class="sect3">
<h4 id="queryexpr"><a class="link" href="#queryexpr">queryExpr</a></h4>
<div class="listingblock">
<div class="title">Grammar</div>
<div class="content">
<pre class="highlight"><code class="language-ebnf" data-lang="ebnf">queryExpr = [ constraintExpr ];</code></pre>
</div>
</div>
<div class="dlist">
<dl>
<dt class="hdlist1">Empty query</dt>
<dd>
<p>If no queryExpression is given, all documents will be in the result.</p>
</dd>
</dl>
</div>
</div>
<div class="sect3">
<h4 id="constraintexpr"><a class="link" href="#constraintexpr">constraintExpr</a></h4>
<div class="listingblock">
<div class="title">Grammar</div>
<div class="content">
<pre class="highlight"><code class="language-ebnf" data-lang="ebnf">constraintExpr = compareExpr
               | logicalExpr
               | functionExpr
               | notExpr ;</code></pre>
</div>
</div>
</div>
<div class="sect3">
<h4 id="compareexpr"><a class="link" href="#compareexpr">compareExpr</a></h4>
<div class="listingblock">
<div class="title">Grammar</div>
<div class="content">
<pre class="highlight"><code class="language-ebnf" data-lang="ebnf">compareExpr   = fieldExpr operator valueExpr ;
fieldExpr     = propertyPath ;
operator      = '=', '!=', '&gt;', '&gt;', '&lt;', '&lt;=', 'LIKE', 'NOT LIKE', 'IN', 'NOT IN' ;
valueExpr     = string | number | valueFunc ;
valueFunc     = geoPoint | instant | time | date | dateTime | localDateTime ;
geoPoint      =  '"' lat ',' lon '"' ;
instant       = 'instant(' string ')' ;
date          = 'date(' string ')' ;
time          = 'time(' string ')' ;
dateTime      = 'dateTime(' string ')' ;
localDateTime = 'localDateTime(' string ')' ;</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Examples</div>
<div class="content">
<pre class="highlight"><code class="language-ebnf" data-lang="ebnf">user.myCategory = "articles"
user.myCategory IN ("articles", "documents")
user.myCategory != "articles"
user.myCategory LIKE "*tic*"
myPriority &lt; 10
myPriority &lt;= 10
myPriority &gt; 10
myPriority &lt; 100
myPriority != 10
myInstant = instant('2014-02-26T14:52:30.00Z')
myInstant &lt;= instant('2014-02-26T14:52:30.00Z')
myInstant &lt;= dateTime('2014-02-26T14:52:30.00+02:00')
myTime = time('09:00')
myDate = date('2015-02-26')
myLocalDateTime = localDateTime('2015-02-26T15:00')
myLocation = '59.9127300,10.7460900'
myLocation IN ('59.9127300,10.7460900','59.2181000,10.9298000')</code></pre>
</div>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
<code>instant</code>, <code>dateTime</code>, <code>localDateTime</code>, <code>date</code> functions will force search in <code>datetime</code> index, meanwhile for <code>time</code> function  usual <code>text</code> index will be used. Using expressions without functions perform a search in <code>text</code> index for any time-related field. See more about indexing <a href="indexing.ahtml#value_types">there</a>.
</td>
</tr>
</table>
</div>
</div>
<div class="sect3">
<h4 id="logicalexpr"><a class="link" href="#logicalexpr">logicalExpr</a></h4>
<div class="listingblock">
<div class="title">Grammar</div>
<div class="content">
<pre class="highlight"><code class="language-ebnf" data-lang="ebnf">logicalExpr = constraintExpr operator constraintExpr ;
operator    = 'AND' | 'OR' ;</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Examples</div>
<div class="content">
<pre class="highlight"><code class="language-sql" data-lang="sql">myCategory = "articles" AND myPriority &gt; 10
myCategory IN ("articles", "documents") OR myPriority &lt;= 10</code></pre>
</div>
</div>
</div>
<div class="sect3">
<h4 id="notexpr"><a class="link" href="#notexpr">notExpr</a></h4>
<div class="listingblock">
<div class="title">Grammar</div>
<div class="content">
<pre class="highlight"><code class="language-ebnf" data-lang="ebnf">notExpr = 'NOT' constraintExpr ;</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Examples</div>
<div class="content">
<pre class="highlight"><code class="language-sql" data-lang="sql">NOT myCategory = 'article'</code></pre>
</div>
</div>
</div>
<div class="sect3">
<h4 id="functionexpr"><a class="link" href="#functionexpr">functionExpr</a></h4>
<div class="listingblock">
<div class="title">Grammar</div>
<div class="content">
<pre class="highlight"><code class="language-ebnf" data-lang="ebnf">functionExpr = functionName '(' arguments ')' ;</code></pre>
</div>
</div>
<div class="paragraph">
<p><strong>Examples</strong></p>
</div>
<div class="listingblock">
<div class="title">Fulltext analyzed property contains 'fish' and 'spot'</div>
<div class="content">
<pre class="highlight"><code class="language-sql" data-lang="sql">fulltext('_allText', 'fish spot', 'AND')</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Sub properties of 'data.' contains 'fish' and 'spot'</div>
<div class="content">
<pre class="highlight"><code class="language-sql" data-lang="sql">fulltext('data.*', 'fish spot', 'AND')</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Property 'myCategory' is either 'article' or 'document' and title starts with 'fish'.</div>
<div class="content">
<pre class="highlight"><code class="language-sql" data-lang="sql">myCategory IN ('article', 'document') AND ngram('title', 'fish', 'AND')</code></pre>
</div>
</div>
</div>
<div class="sect3">
<h4 id="propertypath"><a class="link" href="#propertypath">propertyPath</a></h4>
<div id="propertyPath" class="listingblock">
<div class="title">Grammar</div>
<div class="content">
<pre class="highlight"><code class="language-ebnf" data-lang="ebnf">propertyPath = pathElement ( '.' pathElement )* ;
pathElement  = ( [ validJavaIdentifier - '.' ] )* ;</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Examples</div>
<div class="content">
<pre class="highlight"><code class="language-sql" data-lang="sql">myProperty
data.myProperty
data.myCategory.myProperty</code></pre>
</div>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
<div class="paragraph">
<p>Wildcards in propertyPaths are only supported in <code>fulltext</code> and <code>ngram</code> functions at the moment.
When using these functions, expressions like these are valid:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-ebnf" data-lang="ebnf">myProp*
*Property
data.*
*.myProperty
data.*.myProperty</code></pre>
</div>
</div>
</td>
</tr>
</table>
</div>
</div>
</div>
<div class="sect2">
<h3 id="query_functions"><a class="link" href="#query_functions">Query functions</a></h3>
<div class="paragraph">
<p>Here&#8217;s a description of all functions that can be used in a query.</p>
</div>
<div class="sect3">
<h4 id="fulltext"><a class="link" href="#fulltext">fulltext()</a></h4>
<div class="paragraph">
<p>The fulltext function is searching for words in a field,
and calculates relevance scores based on a set of rules (e.g number of occurences, field-length, etc).</p>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
Only analyzed properties are considered when applying the fulltext function.
</td>
</tr>
</table>
</div>
<div class="listingblock">
<div class="title">Function definition</div>
<div class="content">
<pre class="highlight"><code class="language-sql" data-lang="sql">fulltext(&lt;fields&gt;, &lt;search-string&gt;, &lt;operator&gt;)</code></pre>
</div>
</div>
<div class="dlist">
<dl>
<dt class="hdlist1">fields</dt>
<dd>
<p>Comma-separated list of <a href="#propertyPath">propertyPaths</a> to include in the search.</p>
</dd>
</dl>
</div>
<div class="listingblock">
<div class="title">Example fields</div>
<div class="content">
<pre class="highlight"><code class="language-javascript" data-lang="javascript">'displayName' // Search in single field
'displayName,data.description,my.title' // Search in multiple fields
'data.*' // Wildcard usage</code></pre>
</div>
</div>
<div class="paragraph">
<p>You can boost  - thus increasing or decreasing hit-score per field basis.
By providing more than one field to the query by appending a weight-factor: <code>^N</code></p>
</div>
<div class="listingblock">
<div class="title">Boosting example</div>
<div class="content">
<pre class="highlight"><code class="language-sql" data-lang="sql">fulltext('displayName^5,data.description', 'my search string', 'AND')</code></pre>
</div>
</div>
<div class="dlist">
<dl>
<dt class="hdlist1">search-string</dt>
<dd>
<p>The search-string supports a set of operators</p>
<div class="ulist">
<ul>
<li>
<p><code>+</code> signifies AND operation.</p>
</li>
<li>
<p><code>|</code> signifies OR operation.</p>
</li>
<li>
<p><code>-</code> negates a single token.</p>
</li>
<li>
<p><code>*</code> at the end of a term signifies a prefix query.</p>
</li>
<li>
<p><code>(</code> and <code>)</code> signify precedence.</p>
</li>
<li>
<p><code>&#8220;` and `&#8221;</code> wraps a number of tokens to signify a phrase for searching</p>
</li>
<li>
<p><code>~N</code> after a word signifies edit distance (fuzziness) with a number representing <a href="https://en.wikipedia.org/wiki/Levenshtein_distance">Levenshtein distance</a>.</p>
</li>
<li>
<p><code>~N</code> after a phrase signifies slop amount (how far apart terms in phrase are allowed)</p>
</li>
</ul>
</div>
</dd>
<dt class="hdlist1">operator</dt>
<dd>
<p>Allowed operators are:</p>
<div class="ulist">
<ul>
<li>
<p><code>OR</code> Any of the words in the search-string matches.</p>
</li>
<li>
<p><code>AND</code> All words in search-string matches.</p>
</li>
</ul>
</div>
</dd>
</dl>
</div>
<div class="paragraph">
<p><strong>Examples</strong></p>
</div>
<div class="listingblock">
<div class="title">Match if "myField" contains any of the given words.</div>
<div class="content">
<pre class="highlight"><code class="language-javascript" data-lang="javascript">fulltext("myField", "cheese fish cake onion", "OR")</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Match if any field with path starting with "myData.myProperties" contains any of the given words.</div>
<div class="content">
<pre class="highlight"><code class="language-javascript" data-lang="javascript">fulltext("myData.myProperties.*", "cheese fish cake onion", "OR")</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Match if "myField" contains any of the given words and "myCategory" = "soup".</div>
<div class="content">
<pre class="highlight"><code class="language-javascript" data-lang="javascript">myCategory = '"soup" AND fulltext("myField", "cheese fish cake onion", "OR")'</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Match if "myField" contains all the given words.</div>
<div class="content">
<pre class="highlight"><code class="language-javascript" data-lang="javascript">fulltext("myField", "cheese fish cake onion", "AND")</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Match if "myField" contains "Levenshtein" with a fuzziness distance of 2.</div>
<div class="content">
<pre class="highlight"><code class="language-javascript" data-lang="javascript">fulltext("myField", "Levenshtein~2", "AND")</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Match if "myField" contains "fish" and not "boat".</div>
<div class="content">
<pre class="highlight"><code class="language-javascript" data-lang="javascript">fulltext("myField", "fish -boat", "AND")</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Match if any field under data-set data contains "fish" and not "boat".</div>
<div class="content">
<pre class="highlight"><code class="language-javascript" data-lang="javascript">fulltext("data.*", "fish -boat", "AND")</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Match exact phrase.</div>
<div class="content">
<pre class="highlight"><code class="language-javascript" data-lang="javascript">fulltext('data.*', '"gone fishing today"', "AND")</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Match phrase where maximum distance between words are 2.</div>
<div class="content">
<pre class="highlight"><code class="language-javascript" data-lang="javascript">fulltext('data.*', '"gone fishing today"~2', "AND")</code></pre>
</div>
</div>
</div>
<div class="sect3">
<h4 id="stemmed"><a class="link" href="#stemmed">stemmed()</a></h4>
<div class="paragraph">
<p>The stemmed function is similar to <a href="#fulltext">fulltext()</a> except that it searches language optimized tokens instead of a source text. E.g. source text <code>The monkey loved bananas</code> will be transformed to <code>the</code>, <code>monkey</code>, <code>love</code>, <code>banana</code> tokens and they will be used for search.</p>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
Stemming is language-dependent, so <a href="indexing.ahtml#languages">language</a> must be set either on the content or directly in the node indices via indexConfig.
</td>
</tr>
</table>
</div>
<div class="listingblock">
<div class="title">Function definition</div>
<div class="content">
<pre class="highlight"><code class="language-sql" data-lang="sql">stemmed(&lt;fields&gt;, &lt;search-string&gt;, &lt;operator&gt;, &lt;language&gt;)</code></pre>
</div>
</div>
<div class="dlist">
<dl>
<dt class="hdlist1">fields</dt>
<dd>
<p>Comma-separated list of <a href="#propertyPath">propertyPaths</a> to include in the search.</p>
</dd>
</dl>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
Only <code>_alltext</code> field is currently indexed for stemming
</td>
</tr>
</table>
</div>
<div class="dlist">
<dl>
<dt class="hdlist1">search-string</dt>
<dd>
<p>The search-string supports a set of operators</p>
<div class="ulist">
<ul>
<li>
<p><code>+</code> signifies AND operation.</p>
</li>
<li>
<p><code>|</code> signifies OR operation.</p>
</li>
<li>
<p><code>-</code> negates a single token.</p>
</li>
<li>
<p><code>*</code> at the end of a term signifies a prefix query.</p>
</li>
<li>
<p><code>(</code> and <code>)</code> signify precedence.</p>
</li>
<li>
<p><code>&#8220;` and `&#8221;</code> wraps a number of tokens to signify a phrase for searching</p>
</li>
<li>
<p><code>~N</code> after a word signifies edit distance (fuzziness) with a number representing <a href="https://en.wikipedia.org/wiki/Levenshtein_distance">Levenshtein distance</a>.</p>
</li>
<li>
<p><code>~N</code> after a phrase signifies slop amount (how far apart terms in phrase are allowed)</p>
</li>
</ul>
</div>
</dd>
<dt class="hdlist1">operator</dt>
<dd>
<p>Allowed operators are:</p>
<div class="ulist">
<ul>
<li>
<p><code>OR</code> Any of the words in the search-string matches.</p>
</li>
<li>
<p><code>AND</code> All words in search-string matches.</p>
</li>
</ul>
</div>
</dd>
<dt class="hdlist1">language</dt>
<dd>
<p>Content language that was used for stemming. List of <a href="indexing.ahtml#languages">supported languages</a></p>
</dd>
</dl>
</div>
<div class="paragraph">
<p><strong>Examples</strong></p>
</div>
<div class="listingblock">
<div class="title">Match if any field contains any of the given words or their derivatives in english ("fishing", "cakes"&#8230;&#8203;)</div>
<div class="content">
<pre class="highlight"><code class="language-javascript" data-lang="javascript">stemmed("_alltext", "fish cake", "OR", "en")</code></pre>
</div>
</div>
</div>
<div class="sect3">
<h4 id="ngram"><a class="link" href="#ngram">nGram()</a></h4>
<div class="paragraph">
<p>An n-gram is a sequence of n letters from a term. During ngram indexing, the term "foxy" is also indexed as: "f", "fo", and "fox".</p>
</div>
<div class="paragraph">
<p>When using the nGram search function, we are able get matches, even if the search only contains parts of a term.
This is for instance useful when createing autocomplete functionality.
The max limit of the ngram tokenizer is 25 characters, meaning that search strings over 25 characters will not match. As such, ngram queries may successfully be combined with the fulltext search function or other query expressions, to both match fragments of words as well as full phrases.</p>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
Only properties analyzed as text are considered when applying the ngram-function. This includes, by default, all text-based fields in the content domain.
</td>
</tr>
</table>
</div>
<div class="listingblock">
<div class="title">Function definition</div>
<div class="content">
<pre class="highlight"><code class="language-sql" data-lang="sql">ngram(&lt;field&gt;, &lt;search-string&gt;, &lt;operator&gt;)</code></pre>
</div>
</div>
<div class="dlist">
<dl>
<dt class="hdlist1">fields</dt>
<dd>
<p>Comma-separated list of <a href="#propertyPath">propertyPaths</a> to include in the search.</p>
</dd>
</dl>
</div>
<div class="dlist">
<dl>
<dt class="hdlist1">operator</dt>
<dd>
<p>Allowed operators are:</p>
<div class="ulist">
<ul>
<li>
<p><code>OR</code> Any of the words in the search-string matches (default)</p>
</li>
<li>
<p><code>AND</code> All words in search-string matches.</p>
</li>
</ul>
</div>
</dd>
</dl>
</div>
<div class="paragraph">
<p><strong>Examples</strong></p>
</div>
<div class="listingblock">
<div class="title">Property "myProp" contains any word beginning with "lev", e.g "Levenshteins Algorithm".</div>
<div class="content">
<pre class="highlight"><code class="language-sql" data-lang="sql">ngram("myProp", "lev")</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Property "myProp" contains words beginning with "lev" and "alg", e.g "Levenshteins Algorithm".</div>
<div class="content">
<pre class="highlight"><code class="language-sql" data-lang="sql">ngram("myProp", "lev alg", "AND")</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Properties within "myProp" contains words beginning with "fish" or "boat", e.g "fishpond" or "boatman".</div>
<div class="content">
<pre class="highlight"><code class="language-sql" data-lang="sql">ngram("myProp.*", "fish boat", "OR")</code></pre>
</div>
</div>
</div>
<div class="sect3">
<h4 id="range"><a class="link" href="#range">range()</a></h4>
<div class="paragraph">
<p>The range functions test each value in the given property for a given range.</p>
</div>
<div class="listingblock">
<div class="title">Function definition</div>
<div class="content">
<pre class="highlight"><code class="language-sql" data-lang="sql">range(&lt;field&gt;, &lt;from&gt;, &lt;to&gt;, [&lt;includeFrom&gt;], [&lt;includeTo&gt;])</code></pre>
</div>
</div>
<div class="paragraph">
<p>The <code>from</code> and <code>to</code> values must be of the same value type.</p>
</div>
<div class="paragraph">
<p><code>includeFrom</code> and <code>includeTo</code> are optional with default value 'false',
meaning that the actual values for the <code>from</code> and <code>to</code> are not included as matches.</p>
</div>
<div class="paragraph">
<p>Unbounded ranges can be queried by providing an empty string as argument.</p>
</div>
<div class="paragraph">
<p><strong>Examples</strong></p>
</div>
<div class="listingblock">
<div class="title">Property version in the range, including '6.3.0'</div>
<div class="content">
<pre class="highlight"><code class="language-sql" data-lang="sql">range('version', '6.3.0', '6.4.0', 'true', 'false')</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Property publishFrom is between two points in time</div>
<div class="content">
<pre class="highlight"><code class="language-sql" data-lang="sql">range('publishFrom', instant('2015-08-01T09:00:00Z'), instant('2015-08-01T11:00:00Z') )</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Property myValue between <code>2.0</code> and <code>3.0</code>, including 2.0</div>
<div class="content">
<pre class="highlight"><code class="language-sql" data-lang="sql">range('myValue', 2.0, 3.0, 'true', 'false' )</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Property publishFrom newer that the given date.</div>
<div class="content">
<pre class="highlight"><code class="language-sql" data-lang="sql">range('publishFrom', instant('2015-08-01T09:00:00Z'), '')</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Property publishTo older that the given date.</div>
<div class="content">
<pre class="highlight"><code class="language-sql" data-lang="sql">range('publishTo', '', instant('2015-08-01T09:00:00Z'))</code></pre>
</div>
</div>
</div>
<div class="sect3">
<h4 id="pathmatch"><a class="link" href="#pathmatch">pathMatch()</a></h4>
<div id="pathMatch" class="paragraph">
<p>The path-match matches a path in a same branch, scoring the paths closest to the given query path first.
Also, a number of minimum matching elements that must match could be set.</p>
</div>
<div class="listingblock">
<div class="title">Function definition</div>
<div class="content">
<pre class="highlight"><code class="language-sql" data-lang="sql">pathMatch(&lt;field&gt;, &lt;path&gt;, [&lt;minimum_elements_must_match&gt;])</code></pre>
</div>
</div>
<div class="paragraph">
<p>If not given, the default minimum-must-match value will be 1.</p>
</div>
<div class="paragraph">
<p><strong>Example</strong></p>
</div>
<div class="listingblock">
<div class="title">Given the following nodes</div>
<div class="content">
<pre class="highlight"><code class="language-sql" data-lang="sql">/content/mySite
/content/mySite/fish
/content/mySite/fish/onion
/content/mySite/cheese
/content/mySite/cheese/jam
/content/myOtherSite</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Property _path matching minimum 2 path elements</div>
<div class="content">
<pre class="highlight"><code class="language-sql" data-lang="sql">pathMatch('_path', '/content/mySite/fish/onion/mayonnaise', 2)</code></pre>
</div>
</div>
<div class="olist arabic">
<div class="title">This will return (orded by <code>_score</code>):</div>
<ol class="arabic">
<li>
<p><code>/content/mySite/fish/onion</code></p>
</li>
<li>
<p><code>/content/mySite/fish</code></p>
</li>
<li>
<p><code>/content/mySite/cheese/jam</code></p>
</li>
<li>
<p><code>/content/mySite/cheese</code></p>
</li>
<li>
<p><code>/content/mySite</code></p>
</li>
</ol>
</div>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="sort"><a class="link" href="#sort">Sort</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>Similar to traditional SQL databases, XP lets you sort the result by property in ascending or descending order. A basic sort statement is simply defined by property and sorting direction i.e.:</p>
</div>
<div class="literalblock">
<div class="content">
<pre>myproperty DESC</pre>
</div>
</div>
<div class="paragraph">
<p>Additionally, similar to Google, text-based query results may be sorted by ranking.
Ranking is done through an internal algorithm that scores each individual item based on how it matches with your search.
To sort by ranking, use the following statement:</p>
</div>
<div class="literalblock">
<div class="content">
<pre>_score DESC</pre>
</div>
</div>
<div class="paragraph">
<p>A sorting statement can consist of one or more comma separate expressions:</p>
</div>
<div class="paragraph">
<p><span class="image"><span class="alt">XP 7.5.0</span></span> If sort specified for a query, results will contain a meta system property <code>_sort</code>.
Its exposes field values used for sorting.</p>
</div>
<div class="paragraph">
<p>To use DSL sort check <a href="dsl.ahtml#sort">documentation</a>.</p>
</div>
<div class="sect2">
<h3 id="syntax_2"><a class="link" href="#syntax_2">Syntax</a></h3>
<div class="sect3">
<h4 id="sortexpr"><a class="link" href="#sortexpr">sortExpr</a></h4>
<div class="listingblock">
<div class="title">Grammar</div>
<div class="content">
<pre class="highlight"><code class="language-ebnf" data-lang="ebnf">sortExpr = (  | dynamicSortExpr ) ( ',' ( fieldSortExpr | dynamicSortExpr ) )* ;</code></pre>
</div>
</div>
</div>
<div class="sect3">
<h4 id="fieldsortexpr"><a class="link" href="#fieldsortexpr">fieldSortExpr</a></h4>
<div class="listingblock">
<div class="title">Grammar</div>
<div class="content">
<pre class="highlight"><code class="language-ebnf" data-lang="ebnf">fieldSortExpr = propertyPath [ direction ] ;
direction     = 'ASC' | 'DESC' ;</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Examples</div>
<div class="content">
<pre class="highlight"><code class="language-sql" data-lang="sql">_name ASC
_timestamp DESC
title DESC
data.myProperty</code></pre>
</div>
</div>
</div>
<div class="sect3">
<h4 id="dynamicsortexpr"><a class="link" href="#dynamicsortexpr">dynamicSortExpr</a></h4>
<div class="listingblock">
<div class="title">Grammar</div>
<div class="content">
<pre class="highlight"><code class="language-ebnf" data-lang="ebnf">dynamicSortExpr = functionExpr [ direction ] ;
direction        = 'ASC' | 'DESC' ;</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Example sorting by distance from a geoPoint</div>
<div class="content">
<pre class="highlight"><code class="language-sql" data-lang="sql">geoDistance('locationProperty', '59.9127300,10.746090')</code></pre>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="sort_functions"><a class="link" href="#sort_functions">Sort functions</a></h3>
<div class="paragraph">
<p>Here&#8217;s a description of all functions that can be used in order-by clause.</p>
</div>
<div class="sect3">
<h4 id="geodistance"><a class="link" href="#geodistance">geoDistance()</a></h4>
<div class="paragraph">
<p>The geoDistance-function enables you to order the results according to distance
to a given geo-point.</p>
</div>
<div class="admonitionblock tip">
<table>
<tr>
<td class="icon">
<i class="fa icon-tip" title="Tip"></i>
</td>
<td class="content">
Documents with no geo-point property with the given path will be ordered last if matching the query.
</td>
</tr>
</table>
</div>
<div class="listingblock">
<div class="title">geoDistance syntax</div>
<div class="content">
<pre class="highlight"><code class="language-sql" data-lang="sql">geoDistance(&lt;field&gt;, &lt;location&gt;, [&lt;unit&gt;])</code></pre>
</div>
</div>
<div class="dlist">
<dl>
<dt class="hdlist1">field</dt>
<dd>
<p>Any geoPoint property</p>
</dd>
<dt class="hdlist1">location</dt>
<dd>
<p>The location is a geoPoint from which the distance factor should be calculated, formatted as "latitude,longitude".</p>
</dd>
<dt class="hdlist1">unit <span class="image"><span class="alt">XP 7.5.0</span></span></dt>
<dd>
<p>The string representation of distance unit to use. Defaults to "m" or "meters", the list of available values below:</p>
<div class="olist arabic">
<ol class="arabic">
<li>
<p><code>"m" or "meters"</code></p>
</li>
<li>
<p><code>"in" or "inch"</code></p>
</li>
<li>
<p><code>"yd" or "yards"</code></p>
</li>
<li>
<p><code>"ft" or "feet"</code></p>
</li>
<li>
<p><code>"km" or "kilometers"</code></p>
</li>
<li>
<p><code>"NM" or "nmi" or "nauticalmiles"</code></p>
</li>
<li>
<p><code>"mm" or "millimeters"</code></p>
</li>
<li>
<p><code>"cm" or "centimeters"</code></p>
</li>
<li>
<p><code>"mi" or "miles"</code></p>
</li>
</ol>
</div>
</dd>
</dl>
</div>
<div class="listingblock">
<div class="title">geoDistance example</div>
<div class="content">
<pre class="highlight"><code class="language-sql" data-lang="sql">geoDistance("shopLocation", "59.9127300,10.7460900", "km")</code></pre>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="relevance_sorting"><a class="link" href="#relevance_sorting">Relevance sorting</a></h3>
<div class="paragraph">
<p>All properties with values automatically get a sort index entry.
This means that any property can be used for sorting, either (default) DESC (descending) or ASC (ascending).</p>
</div>
<div class="dlist">
<dl>
<dt class="hdlist1">_score</dt>
<dd>
<p>The dynamic system property <strong>_score</strong> is the default sort property</p>
</dd>
</dl>
</div>
<div class="paragraph">
<p>The score value of a node is dynamically calculated based on a number of factors:
For instance, number of matching clauses in boolean expressions,
how often the term appears in the documents when searching for text etc.</p>
</div>
<div class="paragraph">
<p>For more details, check out the Elasticsearch documentation.</p>
</div>
</div>
<div class="sect2">
<h3 id="sort_dsl"><a class="link" href="#sort_dsl">Sort DSL</a></h3>
<div class="paragraph">
<p><span class="image"><span class="alt">XP 7.9.0</span></span></p>
</div>
<div class="paragraph">
<p>Sort DSL is an AST (Abstract Syntax Tree) expressed in JSON to define sort expressions. See <a href="dsl.ahtml#sort">documentation</a> for further explanation and examples.</p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="more_examples"><a class="link" href="#more_examples">More examples</a></h2>
<div class="sectionbody">
<div class="sect2">
<h3 id="querying_paths"><a class="link" href="#querying_paths">Querying paths</a></h3>
<div class="paragraph">
<p>All nodes have three system-properties concerning the node placement in a branch, all of type <code>String</code>:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><code>_name</code>: The node name without path.</p>
</li>
<li>
<p><code>_parentPath</code>: The parent node path.</p>
</li>
<li>
<p><code>_path</code>: The full path of the node.</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>See the <a href="#pathMatch">pathMatch()</a> query function for advanced path matching</p>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
<div class="paragraph">
<p>When working with the content API, all items are placed a special root node: <code>/content</code>.
While this mostly is explicit when working in the content-domain, this has to be dealt with when using paths in query-expressions and functions since you are actually querying nodes.</p>
</div>
</td>
</tr>
</table>
</div>
<div class="paragraph">
<p><strong>Examples</strong></p>
</div>
<div class="listingblock">
<div class="title">Finds node with path <code>/content/mySite/myCategory/myContent</code>.</div>
<div class="content">
<pre class="highlight"><code class="language-sql" data-lang="sql">_path = '/content/mySite/myCategory/myContent'</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Find all nodes with name <code>myContent</code> in a folder named <code>myCategory</code></div>
<div class="content">
<pre class="highlight"><code class="language-sql" data-lang="sql">_name = 'myContent' AND _parentPath LIKE '*myCategory'</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Find all nodes under the path <code>/content/mySite/myCategory</code> including children of children.</div>
<div class="content">
<pre class="highlight"><code class="language-sql" data-lang="sql">_path LIKE '/content/mySite/myCategory/*'</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Find only first level children under the path <code>/content/mySite/myCategory</code>.</div>
<div class="content">
<pre class="highlight"><code class="language-sql" data-lang="sql">_parentPath = '/content/mySite/myCategory'</code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="querying_missing_values"><a class="link" href="#querying_missing_values">Querying missing values</a></h3>
<div class="paragraph">
<p>From time to time, it is also interesting to search for nodes with or without a value:</p>
</div>
<div class="listingblock">
<div class="title">Sample query where property myValue "exists"</div>
<div class="content">
<pre class="highlight"><code>myValue LIKE "*"</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Sample query where "publish.first" does NOT exists</div>
<div class="content">
<pre class="highlight"><code>publish.first NOT LIKE "*"</code></pre>
</div>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
Using <code>exists</code> and <code>notExists</code> filters is considered the most efficient way searching for nodes with missing values
</td>
</tr>
</table>
</div>
</div>
<div class="sect2">
<h3 id="querying_references"><a class="link" href="#querying_references">Querying references</a></h3>
<div class="paragraph">
<p>An aggregation of all outbound references in a node are stored in the system property <code>_references</code>.
This property can then effectively be used also to find incoming references to a node.</p>
</div>
<div class="listingblock">
<div class="title">Find all nodes referring to the node with id = 'abc':</div>
<div class="content">
<pre class="highlight"><code class="language-sql" data-lang="sql">_references = 'abc'</code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="date_and_time"><a class="link" href="#date_and_time">Date and time</a></h3>
<div class="paragraph">
<p>Querying against date and time-fields may require some knowledge on how data is stored and indexed.</p>
</div>
<div class="sect3">
<h4 id="localdate"><a class="link" href="#localdate">LocalDate</a></h4>
<div class="paragraph">
<p>LocalDate represents a date without time-zone in the ISO-8601 calendar, e.g <code>2015-03-19</code>.
LocalDate-properties are stored as a ISO LocalDate-formatted string in the index, thus all searches are done against string-values.</p>
</div>
<div class="paragraph">
<p>LocalDate string-format:</p>
</div>
<div class="literalblock">
<div class="content">
<pre>yyyy-MM-dd</pre>
</div>
</div>
<div class="paragraph">
<p>Given a node with a property named 'myLocalDate' of type <code>localDate</code> and value <code>2015-03-19</code>, all of the following queries will match:</p>
</div>
<div class="literalblock">
<div class="content">
<pre>myLocalDate = '2015-03-19'
myLocalDate &gt; '2015-03-18'
myLocalDate &lt;= '2015-03-19'</pre>
</div>
</div>
</div>
<div class="sect3">
<h4 id="localtime"><a class="link" href="#localtime">LocalTime</a></h4>
<div class="paragraph">
<p>LocalTime represents a time without time-zone in the ISO-8601 calendar, e.g <code>11:39:49</code>.
LocalTime-properties are stored as a ISO LocalTime-formatted string in the index, thus all searches are done against string-values.</p>
</div>
<div class="paragraph">
<p>LocalTime string-format:</p>
</div>
<div class="literalblock">
<div class="content">
<pre>HH:mm[:ss[.SSS]]</pre>
</div>
</div>
<div class="paragraph">
<p>LocalTime string value examples:</p>
</div>
<div class="literalblock">
<div class="content">
<pre>09:30
10:00
10:00:30
10:00:30.142</pre>
</div>
</div>
<div class="paragraph">
<p>Since the queries are matching string-values, the input time in query must either adhere the same string-format restrictions,
or be wrapped in a function <code>time</code> which accepts a time-formatted string as input.</p>
</div>
<div class="paragraph">
<p>Given a node with a property named 'myLocalTime' of type <code>localTime</code> and value = <code>09:36:00</code>, all the following queries will match:</p>
</div>
<div class="literalblock">
<div class="content">
<pre>myLocalTime &gt; '09:00'
myLocalTime = '09:36'
myLocalTime = '09:36:00'
myLocalTime LIKE '09:*'
myLocalTime &lt; '09:36:01'
myLocalTime &lt; '09:36:00.1'</pre>
</div>
</div>
<div class="paragraph">
<p>This must be wrapped in time-function since its not padded with a leading 0:</p>
</div>
<div class="literalblock">
<div class="content">
<pre>myLocalTime &gt; time('9:00')</pre>
</div>
</div>
<div class="paragraph">
<p>If optional fractions of seconds are given, the string format will also contain this even if 0,
and expression will not match unless wrapped in time-function::</p>
</div>
<div class="literalblock">
<div class="content">
<pre>myLocalTime = time('09:36:00.0')</pre>
</div>
</div>
<div class="paragraph">
<p>Even if the string-matching will do the job 99% of the time,
the safest bet is to always go with the time-function when applicable.</p>
</div>
</div>
<div class="sect3">
<h4 id="localdatetime"><a class="link" href="#localdatetime">LocalDateTime</a></h4>
<div class="paragraph">
<p>LocalDateTime represents a date-time without time-zone in the ISO-8601 calendar, e.g <code>2015-03-19T11:39:49</code>.
LocalDateTime-properties are stored as a ISO LocalDateTime-formatted string in the index, thus all searches are done against string-values.</p>
</div>
<div class="paragraph">
<p>LocalDateTime string-format:</p>
</div>
<div class="literalblock">
<div class="content">
<pre>yyyy-MM-ddTHH:mm[:ss[.SSS]]</pre>
</div>
</div>
<div class="paragraph">
<p>Since the queries are matching string-values, the input dateTime in query must either adhere the same string-format restrictions,
or be wrapped in a function <code>dateTime</code> which accepts a dateTime-formatted string as input.</p>
</div>
<div class="dlist">
<dl>
<dt class="hdlist1">Given a node with a property named 'myLocalDateTime' of type <code>localDateTime</code> and value <code>2015-03-19T10:30:00</code>, all of the following queries will match</dt>
<dd>
<p>myLocalDateTime = '2015-03-19T10:30:00'
myLocalDateTime = dateTime('2015-03-19T10:30')
myLocalDateTime &lt; dateTime('2015-03-19T10:30:00.001')</p>
</dd>
</dl>
</div>
</div>
<div class="sect3">
<h4 id="datetime_instant"><a class="link" href="#datetime_instant">DateTime / Instant</a></h4>
<div class="paragraph">
<p>DateTime represents a date-time with time-zone in the ISO-8601 calendar, e.g <code>2015-03-19T11:39:49+02:00</code>.
Its possible to query properties of with value-type <code>DateTime</code> both as an ISO instant and as ISO dateTime, using the provided
built-in functions <code>instant</code> and <code>dateTime</code>.</p>
</div>
<div class="paragraph">
<p>Instant string-format (instant always given in UTC-time):</p>
</div>
<div class="literalblock">
<div class="content">
<pre>yyyy-MM-ddTHH:mm[:ss[.SSS]Z</pre>
</div>
</div>
<div class="paragraph">
<p>Instant string value examples:</p>
</div>
<div class="literalblock">
<div class="content">
<pre>2015-03-19T16:30:20Z
2015-03-19T16:30:20.123Z</pre>
</div>
</div>
<div class="paragraph">
<p>DateTime string-format (<code>Z</code> for UTC, else offset in hours and minutes):</p>
</div>
<div class="literalblock">
<div class="content">
<pre>yyyy-MM-ddTHH:mm[:ss[.SSS](Z|+hh:mm|-hh:mm)</pre>
</div>
</div>
<div class="paragraph">
<p>DateTime string value examples:</p>
</div>
<div class="literalblock">
<div class="content">
<pre>2015-03-19T16:30:20Z
2015-03-19T16:30:20+01:00
2015-03-19T16:30:20-01:30
2015-03-19T16:30:20.123-01:30</pre>
</div>
</div>
<div class="paragraph">
<p>Given a node with a property named 'myDateTime' of type <code>dateTime</code> and value <code>2015-03-19T10:25:00+02:00</code>,
all of the following queries will match:</p>
</div>
<div class="literalblock">
<div class="content">
<pre>myDateTime = instant('2015-03-19T08:25:00Z')
myDateTime = dateTime('2015-03-19T08:25:00Z')
myDateTime = dateTime('2015-03-19T10:25:00+02:00')
myDateTime = dateTime('2015-03-19T11:25:00+03:00')</pre>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div id="footer">
<div id="footer-text">
Last updated 2025-10-08 07:55:29 UTC
</div>
</div>
</body>
</html>