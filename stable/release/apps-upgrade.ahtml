<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="generator" content="Asciidoctor 2.0.23">
<title>Upgrading applications from XP6 to XP7</title>
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Open+Sans:300,300italic,400,400italic,600,600italic%7CNoto+Serif:400,400italic,700,700italic%7CDroid+Sans+Mono:400,700">
<style>
/*! Asciidoctor default stylesheet | MIT License | https://asciidoctor.org */
/* Uncomment the following line when using as a custom stylesheet */
/* @import "https://fonts.googleapis.com/css?family=Open+Sans:300,300italic,400,400italic,600,600italic%7CNoto+Serif:400,400italic,700,700italic%7CDroid+Sans+Mono:400,700"; */
html{font-family:sans-serif;-webkit-text-size-adjust:100%}
a{background:none}
a:focus{outline:thin dotted}
a:active,a:hover{outline:0}
h1{font-size:2em;margin:.67em 0}
b,strong{font-weight:bold}
abbr{font-size:.9em}
abbr[title]{cursor:help;border-bottom:1px dotted #dddddf;text-decoration:none}
dfn{font-style:italic}
hr{height:0}
mark{background:#ff0;color:#000}
code,kbd,pre,samp{font-family:monospace;font-size:1em}
pre{white-space:pre-wrap}
q{quotes:"\201C" "\201D" "\2018" "\2019"}
small{font-size:80%}
sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}
sup{top:-.5em}
sub{bottom:-.25em}
img{border:0}
svg:not(:root){overflow:hidden}
figure{margin:0}
audio,video{display:inline-block}
audio:not([controls]){display:none;height:0}
fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}
legend{border:0;padding:0}
button,input,select,textarea{font-family:inherit;font-size:100%;margin:0}
button,input{line-height:normal}
button,select{text-transform:none}
button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}
button[disabled],html input[disabled]{cursor:default}
input[type=checkbox],input[type=radio]{padding:0}
button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}
textarea{overflow:auto;vertical-align:top}
table{border-collapse:collapse;border-spacing:0}
*,::before,::after{box-sizing:border-box}
html,body{font-size:100%}
body{background:#fff;color:rgba(0,0,0,.8);padding:0;margin:0;font-family:"Noto Serif","DejaVu Serif",serif;line-height:1;position:relative;cursor:auto;-moz-tab-size:4;-o-tab-size:4;tab-size:4;word-wrap:anywhere;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased}
a:hover{cursor:pointer}
img,object,embed{max-width:100%;height:auto}
object,embed{height:100%}
img{-ms-interpolation-mode:bicubic}
.left{float:left!important}
.right{float:right!important}
.text-left{text-align:left!important}
.text-right{text-align:right!important}
.text-center{text-align:center!important}
.text-justify{text-align:justify!important}
.hide{display:none}
img,object,svg{display:inline-block;vertical-align:middle}
textarea{height:auto;min-height:50px}
select{width:100%}
.subheader,.admonitionblock td.content>.title,.audioblock>.title,.exampleblock>.title,.imageblock>.title,.listingblock>.title,.literalblock>.title,.stemblock>.title,.openblock>.title,.paragraph>.title,.quoteblock>.title,table.tableblock>.title,.verseblock>.title,.videoblock>.title,.dlist>.title,.olist>.title,.ulist>.title,.qlist>.title,.hdlist>.title{line-height:1.45;color:#7a2518;font-weight:400;margin-top:0;margin-bottom:.25em}
div,dl,dt,dd,ul,ol,li,h1,h2,h3,#toctitle,.sidebarblock>.content>.title,h4,h5,h6,pre,form,p,blockquote,th,td{margin:0;padding:0}
a{color:#2156a5;text-decoration:underline;line-height:inherit}
a:hover,a:focus{color:#1d4b8f}
a img{border:0}
p{line-height:1.6;margin-bottom:1.25em;text-rendering:optimizeLegibility}
p aside{font-size:.875em;line-height:1.35;font-style:italic}
h1,h2,h3,#toctitle,.sidebarblock>.content>.title,h4,h5,h6{font-family:"Open Sans","DejaVu Sans",sans-serif;font-weight:300;font-style:normal;color:#ba3925;text-rendering:optimizeLegibility;margin-top:1em;margin-bottom:.5em;line-height:1.0125em}
h1 small,h2 small,h3 small,#toctitle small,.sidebarblock>.content>.title small,h4 small,h5 small,h6 small{font-size:60%;color:#e99b8f;line-height:0}
h1{font-size:2.125em}
h2{font-size:1.6875em}
h3,#toctitle,.sidebarblock>.content>.title{font-size:1.375em}
h4,h5{font-size:1.125em}
h6{font-size:1em}
hr{border:solid #dddddf;border-width:1px 0 0;clear:both;margin:1.25em 0 1.1875em}
em,i{font-style:italic;line-height:inherit}
strong,b{font-weight:bold;line-height:inherit}
small{font-size:60%;line-height:inherit}
code{font-family:"Droid Sans Mono","DejaVu Sans Mono",monospace;font-weight:400;color:rgba(0,0,0,.9)}
ul,ol,dl{line-height:1.6;margin-bottom:1.25em;list-style-position:outside;font-family:inherit}
ul,ol{margin-left:1.5em}
ul li ul,ul li ol{margin-left:1.25em;margin-bottom:0}
ul.circle{list-style-type:circle}
ul.disc{list-style-type:disc}
ul.square{list-style-type:square}
ul.circle ul:not([class]),ul.disc ul:not([class]),ul.square ul:not([class]){list-style:inherit}
ol li ul,ol li ol{margin-left:1.25em;margin-bottom:0}
dl dt{margin-bottom:.3125em;font-weight:bold}
dl dd{margin-bottom:1.25em}
blockquote{margin:0 0 1.25em;padding:.5625em 1.25em 0 1.1875em;border-left:1px solid #ddd}
blockquote,blockquote p{line-height:1.6;color:rgba(0,0,0,.85)}
@media screen and (min-width:768px){h1,h2,h3,#toctitle,.sidebarblock>.content>.title,h4,h5,h6{line-height:1.2}
h1{font-size:2.75em}
h2{font-size:2.3125em}
h3,#toctitle,.sidebarblock>.content>.title{font-size:1.6875em}
h4{font-size:1.4375em}}
table{background:#fff;margin-bottom:1.25em;border:1px solid #dedede;word-wrap:normal}
table thead,table tfoot{background:#f7f8f7}
table thead tr th,table thead tr td,table tfoot tr th,table tfoot tr td{padding:.5em .625em .625em;font-size:inherit;color:rgba(0,0,0,.8);text-align:left}
table tr th,table tr td{padding:.5625em .625em;font-size:inherit;color:rgba(0,0,0,.8)}
table tr.even,table tr.alt{background:#f8f8f7}
table thead tr th,table tfoot tr th,table tbody tr td,table tr td,table tfoot tr td{line-height:1.6}
h1,h2,h3,#toctitle,.sidebarblock>.content>.title,h4,h5,h6{line-height:1.2;word-spacing:-.05em}
h1 strong,h2 strong,h3 strong,#toctitle strong,.sidebarblock>.content>.title strong,h4 strong,h5 strong,h6 strong{font-weight:400}
.center{margin-left:auto;margin-right:auto}
.stretch{width:100%}
.clearfix::before,.clearfix::after,.float-group::before,.float-group::after{content:" ";display:table}
.clearfix::after,.float-group::after{clear:both}
:not(pre).nobreak{word-wrap:normal}
:not(pre).nowrap{white-space:nowrap}
:not(pre).pre-wrap{white-space:pre-wrap}
:not(pre):not([class^=L])>code{font-size:.9375em;font-style:normal!important;letter-spacing:0;padding:.1em .5ex;word-spacing:-.15em;background:#f7f7f8;border-radius:4px;line-height:1.45;text-rendering:optimizeSpeed}
pre{color:rgba(0,0,0,.9);font-family:"Droid Sans Mono","DejaVu Sans Mono",monospace;line-height:1.45;text-rendering:optimizeSpeed}
pre code,pre pre{color:inherit;font-size:inherit;line-height:inherit}
pre>code{display:block}
pre.nowrap,pre.nowrap pre{white-space:pre;word-wrap:normal}
em em{font-style:normal}
strong strong{font-weight:400}
.keyseq{color:rgba(51,51,51,.8)}
kbd{font-family:"Droid Sans Mono","DejaVu Sans Mono",monospace;display:inline-block;color:rgba(0,0,0,.8);font-size:.65em;line-height:1.45;background:#f7f7f7;border:1px solid #ccc;border-radius:3px;box-shadow:0 1px 0 rgba(0,0,0,.2),inset 0 0 0 .1em #fff;margin:0 .15em;padding:.2em .5em;vertical-align:middle;position:relative;top:-.1em;white-space:nowrap}
.keyseq kbd:first-child{margin-left:0}
.keyseq kbd:last-child{margin-right:0}
.menuseq,.menuref{color:#000}
.menuseq b:not(.caret),.menuref{font-weight:inherit}
.menuseq{word-spacing:-.02em}
.menuseq b.caret{font-size:1.25em;line-height:.8}
.menuseq i.caret{font-weight:bold;text-align:center;width:.45em}
b.button::before,b.button::after{position:relative;top:-1px;font-weight:400}
b.button::before{content:"[";padding:0 3px 0 2px}
b.button::after{content:"]";padding:0 2px 0 3px}
p a>code:hover{color:rgba(0,0,0,.9)}
#header,#content,#footnotes,#footer{width:100%;margin:0 auto;max-width:62.5em;*zoom:1;position:relative;padding-left:.9375em;padding-right:.9375em}
#header::before,#header::after,#content::before,#content::after,#footnotes::before,#footnotes::after,#footer::before,#footer::after{content:" ";display:table}
#header::after,#content::after,#footnotes::after,#footer::after{clear:both}
#content{margin-top:1.25em}
#content::before{content:none}
#header>h1:first-child{color:rgba(0,0,0,.85);margin-top:2.25rem;margin-bottom:0}
#header>h1:first-child+#toc{margin-top:8px;border-top:1px solid #dddddf}
#header>h1:only-child{border-bottom:1px solid #dddddf;padding-bottom:8px}
#header .details{border-bottom:1px solid #dddddf;line-height:1.45;padding-top:.25em;padding-bottom:.25em;padding-left:.25em;color:rgba(0,0,0,.6);display:flex;flex-flow:row wrap}
#header .details span:first-child{margin-left:-.125em}
#header .details span.email a{color:rgba(0,0,0,.85)}
#header .details br{display:none}
#header .details br+span::before{content:"\00a0\2013\00a0"}
#header .details br+span.author::before{content:"\00a0\22c5\00a0";color:rgba(0,0,0,.85)}
#header .details br+span#revremark::before{content:"\00a0|\00a0"}
#header #revnumber{text-transform:capitalize}
#header #revnumber::after{content:"\00a0"}
#content>h1:first-child:not([class]){color:rgba(0,0,0,.85);border-bottom:1px solid #dddddf;padding-bottom:8px;margin-top:0;padding-top:1rem;margin-bottom:1.25rem}
#toc{border-bottom:1px solid #e7e7e9;padding-bottom:.5em}
#toc>ul{margin-left:.125em}
#toc ul.sectlevel0>li>a{font-style:italic}
#toc ul.sectlevel0 ul.sectlevel1{margin:.5em 0}
#toc ul{font-family:"Open Sans","DejaVu Sans",sans-serif;list-style-type:none}
#toc li{line-height:1.3334;margin-top:.3334em}
#toc a{text-decoration:none}
#toc a:active{text-decoration:underline}
#toctitle{color:#7a2518;font-size:1.2em}
@media screen and (min-width:768px){#toctitle{font-size:1.375em}
body.toc2{padding-left:15em;padding-right:0}
body.toc2 #header>h1:nth-last-child(2){border-bottom:1px solid #dddddf;padding-bottom:8px}
#toc.toc2{margin-top:0!important;background:#f8f8f7;position:fixed;width:15em;left:0;top:0;border-right:1px solid #e7e7e9;border-top-width:0!important;border-bottom-width:0!important;z-index:1000;padding:1.25em 1em;height:100%;overflow:auto}
#toc.toc2 #toctitle{margin-top:0;margin-bottom:.8rem;font-size:1.2em}
#toc.toc2>ul{font-size:.9em;margin-bottom:0}
#toc.toc2 ul ul{margin-left:0;padding-left:1em}
#toc.toc2 ul.sectlevel0 ul.sectlevel1{padding-left:0;margin-top:.5em;margin-bottom:.5em}
body.toc2.toc-right{padding-left:0;padding-right:15em}
body.toc2.toc-right #toc.toc2{border-right-width:0;border-left:1px solid #e7e7e9;left:auto;right:0}}
@media screen and (min-width:1280px){body.toc2{padding-left:20em;padding-right:0}
#toc.toc2{width:20em}
#toc.toc2 #toctitle{font-size:1.375em}
#toc.toc2>ul{font-size:.95em}
#toc.toc2 ul ul{padding-left:1.25em}
body.toc2.toc-right{padding-left:0;padding-right:20em}}
#content #toc{border:1px solid #e0e0dc;margin-bottom:1.25em;padding:1.25em;background:#f8f8f7;border-radius:4px}
#content #toc>:first-child{margin-top:0}
#content #toc>:last-child{margin-bottom:0}
#footer{max-width:none;background:rgba(0,0,0,.8);padding:1.25em}
#footer-text{color:hsla(0,0%,100%,.8);line-height:1.44}
#content{margin-bottom:.625em}
.sect1{padding-bottom:.625em}
@media screen and (min-width:768px){#content{margin-bottom:1.25em}
.sect1{padding-bottom:1.25em}}
.sect1:last-child{padding-bottom:0}
.sect1+.sect1{border-top:1px solid #e7e7e9}
#content h1>a.anchor,h2>a.anchor,h3>a.anchor,#toctitle>a.anchor,.sidebarblock>.content>.title>a.anchor,h4>a.anchor,h5>a.anchor,h6>a.anchor{position:absolute;z-index:1001;width:1.5ex;margin-left:-1.5ex;display:block;text-decoration:none!important;visibility:hidden;text-align:center;font-weight:400}
#content h1>a.anchor::before,h2>a.anchor::before,h3>a.anchor::before,#toctitle>a.anchor::before,.sidebarblock>.content>.title>a.anchor::before,h4>a.anchor::before,h5>a.anchor::before,h6>a.anchor::before{content:"\00A7";font-size:.85em;display:block;padding-top:.1em}
#content h1:hover>a.anchor,#content h1>a.anchor:hover,h2:hover>a.anchor,h2>a.anchor:hover,h3:hover>a.anchor,#toctitle:hover>a.anchor,.sidebarblock>.content>.title:hover>a.anchor,h3>a.anchor:hover,#toctitle>a.anchor:hover,.sidebarblock>.content>.title>a.anchor:hover,h4:hover>a.anchor,h4>a.anchor:hover,h5:hover>a.anchor,h5>a.anchor:hover,h6:hover>a.anchor,h6>a.anchor:hover{visibility:visible}
#content h1>a.link,h2>a.link,h3>a.link,#toctitle>a.link,.sidebarblock>.content>.title>a.link,h4>a.link,h5>a.link,h6>a.link{color:#ba3925;text-decoration:none}
#content h1>a.link:hover,h2>a.link:hover,h3>a.link:hover,#toctitle>a.link:hover,.sidebarblock>.content>.title>a.link:hover,h4>a.link:hover,h5>a.link:hover,h6>a.link:hover{color:#a53221}
details,.audioblock,.imageblock,.literalblock,.listingblock,.stemblock,.videoblock{margin-bottom:1.25em}
details{margin-left:1.25rem}
details>summary{cursor:pointer;display:block;position:relative;line-height:1.6;margin-bottom:.625rem;outline:none;-webkit-tap-highlight-color:transparent}
details>summary::-webkit-details-marker{display:none}
details>summary::before{content:"";border:solid transparent;border-left:solid;border-width:.3em 0 .3em .5em;position:absolute;top:.5em;left:-1.25rem;transform:translateX(15%)}
details[open]>summary::before{border:solid transparent;border-top:solid;border-width:.5em .3em 0;transform:translateY(15%)}
details>summary::after{content:"";width:1.25rem;height:1em;position:absolute;top:.3em;left:-1.25rem}
.admonitionblock td.content>.title,.audioblock>.title,.exampleblock>.title,.imageblock>.title,.listingblock>.title,.literalblock>.title,.stemblock>.title,.openblock>.title,.paragraph>.title,.quoteblock>.title,table.tableblock>.title,.verseblock>.title,.videoblock>.title,.dlist>.title,.olist>.title,.ulist>.title,.qlist>.title,.hdlist>.title{text-rendering:optimizeLegibility;text-align:left;font-family:"Noto Serif","DejaVu Serif",serif;font-size:1rem;font-style:italic}
table.tableblock.fit-content>caption.title{white-space:nowrap;width:0}
.paragraph.lead>p,#preamble>.sectionbody>[class=paragraph]:first-of-type p{font-size:1.21875em;line-height:1.6;color:rgba(0,0,0,.85)}
.admonitionblock>table{border-collapse:separate;border:0;background:none;width:100%}
.admonitionblock>table td.icon{text-align:center;width:80px}
.admonitionblock>table td.icon img{max-width:none}
.admonitionblock>table td.icon .title{font-weight:bold;font-family:"Open Sans","DejaVu Sans",sans-serif;text-transform:uppercase}
.admonitionblock>table td.content{padding-left:1.125em;padding-right:1.25em;border-left:1px solid #dddddf;color:rgba(0,0,0,.6);word-wrap:anywhere}
.admonitionblock>table td.content>:last-child>:last-child{margin-bottom:0}
.exampleblock>.content{border:1px solid #e6e6e6;margin-bottom:1.25em;padding:1.25em;background:#fff;border-radius:4px}
.sidebarblock{border:1px solid #dbdbd6;margin-bottom:1.25em;padding:1.25em;background:#f3f3f2;border-radius:4px}
.sidebarblock>.content>.title{color:#7a2518;margin-top:0;text-align:center}
.exampleblock>.content>:first-child,.sidebarblock>.content>:first-child{margin-top:0}
.exampleblock>.content>:last-child,.exampleblock>.content>:last-child>:last-child,.exampleblock>.content .olist>ol>li:last-child>:last-child,.exampleblock>.content .ulist>ul>li:last-child>:last-child,.exampleblock>.content .qlist>ol>li:last-child>:last-child,.sidebarblock>.content>:last-child,.sidebarblock>.content>:last-child>:last-child,.sidebarblock>.content .olist>ol>li:last-child>:last-child,.sidebarblock>.content .ulist>ul>li:last-child>:last-child,.sidebarblock>.content .qlist>ol>li:last-child>:last-child{margin-bottom:0}
.literalblock pre,.listingblock>.content>pre{border-radius:4px;overflow-x:auto;padding:1em;font-size:.8125em}
@media screen and (min-width:768px){.literalblock pre,.listingblock>.content>pre{font-size:.90625em}}
@media screen and (min-width:1280px){.literalblock pre,.listingblock>.content>pre{font-size:1em}}
.literalblock pre,.listingblock>.content>pre:not(.highlight),.listingblock>.content>pre[class=highlight],.listingblock>.content>pre[class^="highlight "]{background:#f7f7f8}
.literalblock.output pre{color:#f7f7f8;background:rgba(0,0,0,.9)}
.listingblock>.content{position:relative}
.listingblock code[data-lang]::before{display:none;content:attr(data-lang);position:absolute;font-size:.75em;top:.425rem;right:.5rem;line-height:1;text-transform:uppercase;color:inherit;opacity:.5}
.listingblock:hover code[data-lang]::before{display:block}
.listingblock.terminal pre .command::before{content:attr(data-prompt);padding-right:.5em;color:inherit;opacity:.5}
.listingblock.terminal pre .command:not([data-prompt])::before{content:"$"}
.listingblock pre.highlightjs{padding:0}
.listingblock pre.highlightjs>code{padding:1em;border-radius:4px}
.listingblock pre.prettyprint{border-width:0}
.prettyprint{background:#f7f7f8}
pre.prettyprint .linenums{line-height:1.45;margin-left:2em}
pre.prettyprint li{background:none;list-style-type:inherit;padding-left:0}
pre.prettyprint li code[data-lang]::before{opacity:1}
pre.prettyprint li:not(:first-child) code[data-lang]::before{display:none}
table.linenotable{border-collapse:separate;border:0;margin-bottom:0;background:none}
table.linenotable td[class]{color:inherit;vertical-align:top;padding:0;line-height:inherit;white-space:normal}
table.linenotable td.code{padding-left:.75em}
table.linenotable td.linenos,pre.pygments .linenos{border-right:1px solid;opacity:.35;padding-right:.5em;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}
pre.pygments span.linenos{display:inline-block;margin-right:.75em}
.quoteblock{margin:0 1em 1.25em 1.5em;display:table}
.quoteblock:not(.excerpt)>.title{margin-left:-1.5em;margin-bottom:.75em}
.quoteblock blockquote,.quoteblock p{color:rgba(0,0,0,.85);font-size:1.15rem;line-height:1.75;word-spacing:.1em;letter-spacing:0;font-style:italic;text-align:justify}
.quoteblock blockquote{margin:0;padding:0;border:0}
.quoteblock blockquote::before{content:"\201c";float:left;font-size:2.75em;font-weight:bold;line-height:.6em;margin-left:-.6em;color:#7a2518;text-shadow:0 1px 2px rgba(0,0,0,.1)}
.quoteblock blockquote>.paragraph:last-child p{margin-bottom:0}
.quoteblock .attribution{margin-top:.75em;margin-right:.5ex;text-align:right}
.verseblock{margin:0 1em 1.25em}
.verseblock pre{font-family:"Open Sans","DejaVu Sans",sans-serif;font-size:1.15rem;color:rgba(0,0,0,.85);font-weight:300;text-rendering:optimizeLegibility}
.verseblock pre strong{font-weight:400}
.verseblock .attribution{margin-top:1.25rem;margin-left:.5ex}
.quoteblock .attribution,.verseblock .attribution{font-size:.9375em;line-height:1.45;font-style:italic}
.quoteblock .attribution br,.verseblock .attribution br{display:none}
.quoteblock .attribution cite,.verseblock .attribution cite{display:block;letter-spacing:-.025em;color:rgba(0,0,0,.6)}
.quoteblock.abstract blockquote::before,.quoteblock.excerpt blockquote::before,.quoteblock .quoteblock blockquote::before{display:none}
.quoteblock.abstract blockquote,.quoteblock.abstract p,.quoteblock.excerpt blockquote,.quoteblock.excerpt p,.quoteblock .quoteblock blockquote,.quoteblock .quoteblock p{line-height:1.6;word-spacing:0}
.quoteblock.abstract{margin:0 1em 1.25em;display:block}
.quoteblock.abstract>.title{margin:0 0 .375em;font-size:1.15em;text-align:center}
.quoteblock.excerpt>blockquote,.quoteblock .quoteblock{padding:0 0 .25em 1em;border-left:.25em solid #dddddf}
.quoteblock.excerpt,.quoteblock .quoteblock{margin-left:0}
.quoteblock.excerpt blockquote,.quoteblock.excerpt p,.quoteblock .quoteblock blockquote,.quoteblock .quoteblock p{color:inherit;font-size:1.0625rem}
.quoteblock.excerpt .attribution,.quoteblock .quoteblock .attribution{color:inherit;font-size:.85rem;text-align:left;margin-right:0}
p.tableblock:last-child{margin-bottom:0}
td.tableblock>.content{margin-bottom:1.25em;word-wrap:anywhere}
td.tableblock>.content>:last-child{margin-bottom:-1.25em}
table.tableblock,th.tableblock,td.tableblock{border:0 solid #dedede}
table.grid-all>*>tr>*{border-width:1px}
table.grid-cols>*>tr>*{border-width:0 1px}
table.grid-rows>*>tr>*{border-width:1px 0}
table.frame-all{border-width:1px}
table.frame-ends{border-width:1px 0}
table.frame-sides{border-width:0 1px}
table.frame-none>colgroup+*>:first-child>*,table.frame-sides>colgroup+*>:first-child>*{border-top-width:0}
table.frame-none>:last-child>:last-child>*,table.frame-sides>:last-child>:last-child>*{border-bottom-width:0}
table.frame-none>*>tr>:first-child,table.frame-ends>*>tr>:first-child{border-left-width:0}
table.frame-none>*>tr>:last-child,table.frame-ends>*>tr>:last-child{border-right-width:0}
table.stripes-all>*>tr,table.stripes-odd>*>tr:nth-of-type(odd),table.stripes-even>*>tr:nth-of-type(even),table.stripes-hover>*>tr:hover{background:#f8f8f7}
th.halign-left,td.halign-left{text-align:left}
th.halign-right,td.halign-right{text-align:right}
th.halign-center,td.halign-center{text-align:center}
th.valign-top,td.valign-top{vertical-align:top}
th.valign-bottom,td.valign-bottom{vertical-align:bottom}
th.valign-middle,td.valign-middle{vertical-align:middle}
table thead th,table tfoot th{font-weight:bold}
tbody tr th{background:#f7f8f7}
tbody tr th,tbody tr th p,tfoot tr th,tfoot tr th p{color:rgba(0,0,0,.8);font-weight:bold}
p.tableblock>code:only-child{background:none;padding:0}
p.tableblock{font-size:1em}
ol{margin-left:1.75em}
ul li ol{margin-left:1.5em}
dl dd{margin-left:1.125em}
dl dd:last-child,dl dd:last-child>:last-child{margin-bottom:0}
li p,ul dd,ol dd,.olist .olist,.ulist .ulist,.ulist .olist,.olist .ulist{margin-bottom:.625em}
ul.checklist,ul.none,ol.none,ul.no-bullet,ol.no-bullet,ol.unnumbered,ul.unstyled,ol.unstyled{list-style-type:none}
ul.no-bullet,ol.no-bullet,ol.unnumbered{margin-left:.625em}
ul.unstyled,ol.unstyled{margin-left:0}
li>p:empty:only-child::before{content:"";display:inline-block}
ul.checklist>li>p:first-child{margin-left:-1em}
ul.checklist>li>p:first-child>.fa-square-o:first-child,ul.checklist>li>p:first-child>.fa-check-square-o:first-child{width:1.25em;font-size:.8em;position:relative;bottom:.125em}
ul.checklist>li>p:first-child>input[type=checkbox]:first-child{margin-right:.25em}
ul.inline{display:flex;flex-flow:row wrap;list-style:none;margin:0 0 .625em -1.25em}
ul.inline>li{margin-left:1.25em}
.unstyled dl dt{font-weight:400;font-style:normal}
ol.arabic{list-style-type:decimal}
ol.decimal{list-style-type:decimal-leading-zero}
ol.loweralpha{list-style-type:lower-alpha}
ol.upperalpha{list-style-type:upper-alpha}
ol.lowerroman{list-style-type:lower-roman}
ol.upperroman{list-style-type:upper-roman}
ol.lowergreek{list-style-type:lower-greek}
.hdlist>table,.colist>table{border:0;background:none}
.hdlist>table>tbody>tr,.colist>table>tbody>tr{background:none}
td.hdlist1,td.hdlist2{vertical-align:top;padding:0 .625em}
td.hdlist1{font-weight:bold;padding-bottom:1.25em}
td.hdlist2{word-wrap:anywhere}
.literalblock+.colist,.listingblock+.colist{margin-top:-.5em}
.colist td:not([class]):first-child{padding:.4em .75em 0;line-height:1;vertical-align:top}
.colist td:not([class]):first-child img{max-width:none}
.colist td:not([class]):last-child{padding:.25em 0}
.thumb,.th{line-height:0;display:inline-block;border:4px solid #fff;box-shadow:0 0 0 1px #ddd}
.imageblock.left{margin:.25em .625em 1.25em 0}
.imageblock.right{margin:.25em 0 1.25em .625em}
.imageblock>.title{margin-bottom:0}
.imageblock.thumb,.imageblock.th{border-width:6px}
.imageblock.thumb>.title,.imageblock.th>.title{padding:0 .125em}
.image.left,.image.right{margin-top:.25em;margin-bottom:.25em;display:inline-block;line-height:0}
.image.left{margin-right:.625em}
.image.right{margin-left:.625em}
a.image{text-decoration:none;display:inline-block}
a.image object{pointer-events:none}
sup.footnote,sup.footnoteref{font-size:.875em;position:static;vertical-align:super}
sup.footnote a,sup.footnoteref a{text-decoration:none}
sup.footnote a:active,sup.footnoteref a:active,#footnotes .footnote a:first-of-type:active{text-decoration:underline}
#footnotes{padding-top:.75em;padding-bottom:.75em;margin-bottom:.625em}
#footnotes hr{width:20%;min-width:6.25em;margin:-.25em 0 .75em;border-width:1px 0 0}
#footnotes .footnote{padding:0 .375em 0 .225em;line-height:1.3334;font-size:.875em;margin-left:1.2em;margin-bottom:.2em}
#footnotes .footnote a:first-of-type{font-weight:bold;text-decoration:none;margin-left:-1.05em}
#footnotes .footnote:last-of-type{margin-bottom:0}
#content #footnotes{margin-top:-.625em;margin-bottom:0;padding:.75em 0}
div.unbreakable{page-break-inside:avoid}
.big{font-size:larger}
.small{font-size:smaller}
.underline{text-decoration:underline}
.overline{text-decoration:overline}
.line-through{text-decoration:line-through}
.aqua{color:#00bfbf}
.aqua-background{background:#00fafa}
.black{color:#000}
.black-background{background:#000}
.blue{color:#0000bf}
.blue-background{background:#0000fa}
.fuchsia{color:#bf00bf}
.fuchsia-background{background:#fa00fa}
.gray{color:#606060}
.gray-background{background:#7d7d7d}
.green{color:#006000}
.green-background{background:#007d00}
.lime{color:#00bf00}
.lime-background{background:#00fa00}
.maroon{color:#600000}
.maroon-background{background:#7d0000}
.navy{color:#000060}
.navy-background{background:#00007d}
.olive{color:#606000}
.olive-background{background:#7d7d00}
.purple{color:#600060}
.purple-background{background:#7d007d}
.red{color:#bf0000}
.red-background{background:#fa0000}
.silver{color:#909090}
.silver-background{background:#bcbcbc}
.teal{color:#006060}
.teal-background{background:#007d7d}
.white{color:#bfbfbf}
.white-background{background:#fafafa}
.yellow{color:#bfbf00}
.yellow-background{background:#fafa00}
span.icon>.fa{cursor:default}
a span.icon>.fa{cursor:inherit}
.admonitionblock td.icon [class^="fa icon-"]{font-size:2.5em;text-shadow:1px 1px 2px rgba(0,0,0,.5);cursor:default}
.admonitionblock td.icon .icon-note::before{content:"\f05a";color:#19407c}
.admonitionblock td.icon .icon-tip::before{content:"\f0eb";text-shadow:1px 1px 2px rgba(155,155,0,.8);color:#111}
.admonitionblock td.icon .icon-warning::before{content:"\f071";color:#bf6900}
.admonitionblock td.icon .icon-caution::before{content:"\f06d";color:#bf3400}
.admonitionblock td.icon .icon-important::before{content:"\f06a";color:#bf0000}
.conum[data-value]{display:inline-block;color:#fff!important;background:rgba(0,0,0,.8);border-radius:50%;text-align:center;font-size:.75em;width:1.67em;height:1.67em;line-height:1.67em;font-family:"Open Sans","DejaVu Sans",sans-serif;font-style:normal;font-weight:bold}
.conum[data-value] *{color:#fff!important}
.conum[data-value]+b{display:none}
.conum[data-value]::after{content:attr(data-value)}
pre .conum[data-value]{position:relative;top:-.125em}
b.conum *{color:inherit!important}
.conum:not([data-value]):empty{display:none}
dt,th.tableblock,td.content,div.footnote{text-rendering:optimizeLegibility}
h1,h2,p,td.content,span.alt,summary{letter-spacing:-.01em}
p strong,td.content strong,div.footnote strong{letter-spacing:-.005em}
p,blockquote,dt,td.content,td.hdlist1,span.alt,summary{font-size:1.0625rem}
p{margin-bottom:1.25rem}
.sidebarblock p,.sidebarblock dt,.sidebarblock td.content,p.tableblock{font-size:1em}
.exampleblock>.content{background:#fffef7;border-color:#e0e0dc;box-shadow:0 1px 4px #e0e0dc}
.print-only{display:none!important}
@page{margin:1.25cm .75cm}
@media print{*{box-shadow:none!important;text-shadow:none!important}
html{font-size:80%}
a{color:inherit!important;text-decoration:underline!important}
a.bare,a[href^="#"],a[href^="mailto:"]{text-decoration:none!important}
a[href^="http:"]:not(.bare)::after,a[href^="https:"]:not(.bare)::after{content:"(" attr(href) ")";display:inline-block;font-size:.875em;padding-left:.25em}
abbr[title]{border-bottom:1px dotted}
abbr[title]::after{content:" (" attr(title) ")"}
pre,blockquote,tr,img,object,svg{page-break-inside:avoid}
thead{display:table-header-group}
svg{max-width:100%}
p,blockquote,dt,td.content{font-size:1em;orphans:3;widows:3}
h2,h3,#toctitle,.sidebarblock>.content>.title{page-break-after:avoid}
#header,#content,#footnotes,#footer{max-width:none}
#toc,.sidebarblock,.exampleblock>.content{background:none!important}
#toc{border-bottom:1px solid #dddddf!important;padding-bottom:0!important}
body.book #header{text-align:center}
body.book #header>h1:first-child{border:0!important;margin:2.5em 0 1em}
body.book #header .details{border:0!important;display:block;padding:0!important}
body.book #header .details span:first-child{margin-left:0!important}
body.book #header .details br{display:block}
body.book #header .details br+span::before{content:none!important}
body.book #toc{border:0!important;text-align:left!important;padding:0!important;margin:0!important}
body.book #toc,body.book #preamble,body.book h1.sect0,body.book .sect1>h2{page-break-before:always}
.listingblock code[data-lang]::before{display:block}
#footer{padding:0 .9375em}
.hide-on-print{display:none!important}
.print-only{display:block!important}
.hide-for-print{display:none!important}
.show-for-print{display:inherit!important}}
@media amzn-kf8,print{#header>h1:first-child{margin-top:1.25rem}
.sect1{padding:0!important}
.sect1+.sect1{border:0}
#footer{background:none}
#footer-text{color:rgba(0,0,0,.6);font-size:.9em}}
@media amzn-kf8{#header,#content,#footnotes,#footer{padding:0}}
</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
</head>
<body class="article toc2 toc-right">
<div id="header">
<h1>Upgrading applications from XP6 to XP7</h1>
<div id="toc" class="toc2">
<div id="toctitle">Table of Contents</div>
<ul class="sectlevel1">
<li><a href="#preparations">Preparations</a></li>
<li><a href="#1_create_a_sandbox">1. Create a sandbox</a></li>
<li><a href="#2_build_system">2. Build system</a>
<ul class="sectlevel2">
<li><a href="#gradle_wrapper">Gradle Wrapper</a></li>
<li><a href="#xp_gradle_plugins">XP Gradle plugins</a></li>
<li><a href="#dependencies">Dependencies</a></li>
<li><a href="#verify">Verify</a></li>
<li><a href="#xp_home">XP_HOME</a></li>
</ul>
</li>
<li><a href="#3_schema_changes">3. Schema changes</a>
<ul class="sectlevel2">
<li><a href="#form_element">Form element</a></li>
<li><a href="#descriptions">Descriptions</a></li>
<li><a href="#fieldset">FieldSet</a></li>
<li><a href="#content_scope">Content scope</a></li>
<li><a href="#mixins">Mixins</a></li>
<li><a href="#inline">Inline</a></li>
<li><a href="#display_name_script">Display name script</a></li>
<li><a href="#customselector_update">CustomSelector update</a></li>
</ul>
</li>
<li><a href="#4_x_data">4. X-data</a>
<ul class="sectlevel2">
<li><a href="#x_data_folder">x-data folder</a></li>
<li><a href="#x_data_format">X-data format</a></li>
</ul>
</li>
<li><a href="#5_rich_text_editor">5. Rich text editor</a>
<ul class="sectlevel2">
<li><a href="#image_styles">Image styles</a></li>
<li><a href="#editor_xss">Editor XSS</a></li>
<li><a href="#standard_classes">Standard Classes</a></li>
</ul>
</li>
<li><a href="#6_site_engine">6. Site engine</a>
<ul class="sectlevel2">
<li><a href="#flattened_page_components">Flattened page components</a></li>
<li><a href="#response_filters">Response filters</a></li>
<li><a href="#render_mode">Render mode</a></li>
</ul>
</li>
<li><a href="#7_js_controllers">7. JS Controllers</a>
<ul class="sectlevel2">
<li><a href="#userstores_and_idproviders">Userstores and IDproviders</a></li>
<li><a href="#content_library">Content Library</a></li>
<li><a href="#new_cms_repo">New CMS repo</a></li>
<li><a href="#main_js">Main.js</a></li>
<li><a href="#require_resolving">Require() resolving</a></li>
</ul>
</li>
<li><a href="#8_assets_and_services">8. Assets and services</a></li>
<li><a href="#10_widgets">10. Widgets</a>
<ul class="sectlevel2">
<li><a href="#widget_html">Widget HTML</a></li>
<li><a href="#implements">Implements</a></li>
<li><a href="#widget_icon_and_description">Widget icon and description</a></li>
<li><a href="#no_context">No context</a></li>
<li><a href="#widget_in_the_dom">Widget in the DOM</a></li>
<li><a href="#repo_context">Repo context</a></li>
</ul>
</li>
<li><a href="#11_jdk">11. JDK</a></li>
<li><a href="#12_testing_api">12. Testing API</a></li>
</ul>
</div>
</div>
<div id="content">
<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p>This section describes the steps required to upgrade an XP application from 6.x to 7.0</p>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
This section is only relevant when upgrading from XP6 to XP7.
</td>
</tr>
</table>
</div>
</div>
</div>
<div class="sect1">
<h2 id="preparations"><a class="link" href="#preparations">Preparations</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>Before you start the upgrade procedure:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Make sure you have <a href="https://developer.enonic.com/docs/enonic-cli">Enonic CLI</a> installed</p>
</li>
<li>
<p>Check out the project source code to a local folder i.e. myapp/</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect1">
<h2 id="1_create_a_sandbox"><a class="link" href="#1_create_a_sandbox">1. Create a sandbox</a></h2>
<div class="sectionbody">
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
With XP 7 you no longer need to install JDK separately - it comes bundled with XP.
</td>
</tr>
</table>
</div>
<div class="paragraph">
<p>To create the sandbox, go to your project folder and run the following command:</p>
</div>
<div class="literalblock">
<div class="content">
<pre>enonic project sandbox</pre>
</div>
</div>
<div class="paragraph">
<p>When the command has completed successfully, the sandbox will be associated with your project.
This enables us to build, deploy and test the application.</p>
</div>
<div class="admonitionblock tip">
<table>
<tr>
<td class="icon">
<i class="fa icon-tip" title="Tip"></i>
</td>
<td class="content">
<div class="paragraph">
<p><strong>Using Git?</strong>
Enonic CLI adds a <code>.enonic</code> file to your project root, consider updating your <code>.gitignore</code> file with the following entry:</p>
</div>
<div class="literalblock">
<div class="content">
<pre>### Enonic ###
.enonic</pre>
</div>
</div>
</td>
</tr>
</table>
</div>
</div>
</div>
<div class="sect1">
<h2 id="2_build_system"><a class="link" href="#2_build_system">2. Build system</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>The standard build system used for XP projects must be updated.</p>
</div>
<div class="sect2">
<h3 id="gradle_wrapper"><a class="link" href="#gradle_wrapper">Gradle Wrapper</a></h3>
<div class="paragraph">
<p>XP 7.0 to 7.12 standardizes on the use of Gradle 5. XP 7.13 standardizes on the use of Gradle 8.3.
We recommend bundling Gradle wrapper of version 8.3 or later in your project</p>
</div>
<div class="paragraph">
<p>If you have installed Gradle 5, from your project root, run:</p>
</div>
<div class="literalblock">
<div class="content">
<pre>gradle wrapper</pre>
</div>
</div>
<div class="paragraph">
<p>This will install or update your project with a new Gradle wrapper.</p>
</div>
</div>
<div class="sect2">
<h3 id="xp_gradle_plugins"><a class="link" href="#xp_gradle_plugins">XP Gradle plugins</a></h3>
<div class="sect3">
<h4 id="application_upgrade"><a class="link" href="#application_upgrade">Application upgrade</a></h4>
<div class="paragraph">
<p>If you are upgrading <strong>an application</strong>, you need to use version greater or equal to '2.0.0' of the XP Gradle plugin (<em>com.enonic.xp.app</em>).
It supports Gradle 5, JDK 11 and building for XP 7.
Gradle plugin '3.4.0' supports Gradle 8.3 and Java 17 - recommended to build apps for XP versions 7.13 and greater</p>
</div>
<div class="paragraph">
<p>This plugin expects application properties to be defined in the <code>app {}</code> section of <em>build.gradle</em>
and enables quick reference to the Enonic repo via <em>xp.enonicRepo()</em> shortcut</p>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
It is recommended to use latest version of Gradle 8.x as older Gradle versions may not work properly.
</td>
</tr>
</table>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
Syntax for adding plugins to Gradle may have changed for your project, we recommend the following updates to your build files:
</td>
</tr>
</table>
</div>
<div class="listingblock">
<div class="title">build.gradle sample</div>
<div class="content">
<pre class="highlight"><code class="language-groovy" data-lang="groovy">plugins {
    id 'com.enonic.xp.app' version '3.4.0'
}

app {
    name = "${appName}"
    displayName = "${appDisplayName}"
    vendorName = "${vendorName}"
    vendorUrl = "${vendorUrl}"
    systemVersion = "${xpVersion}"
}

dependencies {
    implementation "com.enonic.xp:script-api:${xpVersion}"
    include "com.enonic.xp:lib-content:${xpVersion}"
    include "com.enonic.xp:lib-portal:${xpVersion}"
}

repositories {
    mavenCentral()
    xp.enonicRepo()
}</code></pre>
</div>
</div>
<div class="paragraph">
<p>Additionally, this is the recommended format for gradle.properties</p>
</div>
<div class="listingblock">
<div class="title">gradle.properties sample</div>
<div class="content">
<pre class="highlight"><code class="language-properties" data-lang="properties"># Gradle Project settings
projectName = myproject
version = 1.0.0-SNAPSHOT

# XP App values
appDisplayName = My Cool App
appName = com.acme.something.myproject
vendorName = Acme Inc
vendorUrl = https://example.com
xpVersion = 7.0.0

# Settings for publishing to a Maven repo
group = com.acme.something</code></pre>
</div>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
<code>appName</code> and <code>appDisplayName</code> are only used for application projects, as well as <code>app</code> config in <code>build.gradle</code>
</td>
</tr>
</table>
</div>
</div>
<div class="sect3">
<h4 id="library_upgrade"><a class="link" href="#library_upgrade">Library upgrade</a></h4>
<div class="paragraph">
<p>If you are upgrading <strong>a library</strong>, you don&#8217;t need to use <em>com.enonic.xp.app</em> plugin or have <code>app {}</code> section in <em>build.gradle</em>.
Below is a sample content of <em>build.gradle</em> and <em>gradle.properties</em> files for a library:</p>
</div>
<div class="listingblock">
<div class="title">build.gradle sample</div>
<div class="content">
<pre class="highlight"><code class="language-groovy" data-lang="groovy">plugins {
    id 'java'
    id 'maven-publish'
    id 'com.enonic.xp.base' version '3.4.0'
}

repositories {
    mavenCentral()
    xp.enonicRepo()
}</code></pre>
</div>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
You only need to use <em>com.enonic.xp.base</em> plugin if you are using XP dependencies and need to shortlink to Enonic repo
via <em>xp.enonicRepo()</em> shortcut
</td>
</tr>
</table>
</div>
<div class="listingblock">
<div class="title">gradle.properties sample</div>
<div class="content">
<pre class="highlight"><code class="language-properties" data-lang="properties">group=com.mycompany.lib
projectName=mylib
xpVersion=7.0.0
version=1.0.0-SNAPSHOT</code></pre>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="dependencies"><a class="link" href="#dependencies">Dependencies</a></h3>
<div class="paragraph">
<p>The following libraries have been take out of XP core, and are now released and versioned separately:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><a href="https://market.enonic.com/vendors/enonic/thymeleaf-lib">Thymeleaf</a></p>
</li>
<li>
<p><a href="https://market.enonic.com/vendors/enonic/xslt-lib">XSLT</a></p>
</li>
<li>
<p><a href="https://market.enonic.com/vendors/enonic/mustache-lib">Mustache</a></p>
</li>
<li>
<p><a href="https://market.enonic.com/vendors/enonic/http-client-lib">HTTP client</a></p>
</li>
</ul>
</div>
<div class="paragraph">
<p>If your project used the bundled libraries,
update you <code>build.gradle</code> dependencies to use the new libraries</p>
</div>
</div>
<div class="sect2">
<h3 id="verify"><a class="link" href="#verify">Verify</a></h3>
<div class="paragraph">
<p>After completing the steps above, you should now be able to test that your build is working, using the Enonic CLI:</p>
</div>
<div class="literalblock">
<div class="content">
<pre>enonic project deploy</pre>
</div>
</div>
<div class="paragraph">
<p>This command proxies the gradle wrapper, but also connects with the project sandbox.
You may also use <code>enonic project build</code> to build without deploying</p>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
Projects containing Java code might get build errors at this point, otherwise the build should complete successfully.
</td>
</tr>
</table>
</div>
</div>
<div class="sect2">
<h3 id="xp_home"><a class="link" href="#xp_home">XP_HOME</a></h3>
<div class="paragraph">
<p>XP 6 developers will discover that the <code>XP_HOME</code> variable is no longer required.
However, you may still specify this variable manually to build with gradle directly.</p>
</div>
<div class="paragraph">
<p>To achieve this, you must also specify <code>JAVA_HOME</code> to build with the Java embedded in XP 7.</p>
</div>
<div class="paragraph">
<p>The <code>XP_HOME</code> must essentially reference your Sandbox directory, and <code>JAVA_HOME</code> must reference the correct distribution.</p>
</div>
<div class="paragraph">
<p>Sandboxes and distributions are located in your users home directory within the <code>.enonic/</code> folder.
Also, relationships between a project and a sandbox is stored in the <code>.enonic</code> file in your project root.</p>
</div>
<div class="paragraph">
<p>If you don&#8217;t want to do this manually, run this command from your project:</p>
</div>
<div class="literalblock">
<div class="content">
<pre>enonic project shell</pre>
</div>
</div>
<div class="paragraph">
<p><em>Happy hacking!</em></p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="3_schema_changes"><a class="link" href="#3_schema_changes">3. Schema changes</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>CMS projects make extensive use of schemas.
If relevant, update your project based on the following changes:</p>
</div>
<div class="sect2">
<h3 id="form_element"><a class="link" href="#form_element">Form element</a></h3>
<div class="paragraph">
<p>The schema definition syntax has been modified in order to harmonize all schema definitions.</p>
</div>
<div class="paragraph">
<p>As a consequence, the &lt;form&gt; element replaces &lt;config&gt; in the following schema types:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>site</p>
</li>
<li>
<p>layout</p>
</li>
<li>
<p>page</p>
</li>
<li>
<p>part</p>
</li>
<li>
<p>id-provider</p>
</li>
<li>
<p>task</p>
</li>
<li>
<p>mixin</p>
</li>
<li>
<p>x-data</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>Example of how to update the site schema</p>
</div>
<div class="listingblock">
<div class="title">Old site.xml</div>
<div class="content">
<pre class="highlight"><code class="language-xml" data-lang="xml">&lt;site&gt;
  &lt;config&gt;schema goes here...&lt;/config&gt;
&lt;/site&gt;</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">New site.xml</div>
<div class="content">
<pre class="highlight"><code class="language-xml" data-lang="xml">&lt;site&gt;
  &lt;form&gt;schema goes here...&lt;/form&gt;
&lt;/site&gt;</code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="descriptions"><a class="link" href="#descriptions">Descriptions</a></h3>
<div class="paragraph">
<p>You can now declare description in the <code>&lt;description&gt;</code> field of the following schema types:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>content-type</p>
</li>
<li>
<p>page</p>
</li>
<li>
<p>layout</p>
</li>
<li>
<p>part</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>Description of a content type will be shown in the "New Content" dialog, while for pages, layouts or parts it will be shown inside the "Page Components" tree in the Content editor.</p>
</div>
<div class="paragraph">
<p>content-type.xml</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-xml" data-lang="xml">&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;content-type&gt;
  &lt;display-name&gt;Article&lt;/display-name&gt;
  &lt;description&gt;Content type for articles, blogs etc.&lt;/description&gt;
  ...
&lt;/content-type&gt;</code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="fieldset"><a class="link" href="#fieldset">FieldSet</a></h3>
<div class="paragraph">
<p>FieldSets used to require <code>name</code> attribute. The <code>name</code> attribute has no particular use-case and is now deprecated.
Update schemas using fieldsets by removing the <code>name</code> attribute.</p>
</div>
<div class="listingblock">
<div class="title">Old fieldset in schema</div>
<div class="content">
<pre class="highlight"><code class="language-xml" data-lang="xml">&lt;form&gt;
  &lt;field-set name="myname"&gt;schema goes here...&lt;/field-set&gt;
&lt;/form&gt;</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">New fieldset in schema</div>
<div class="content">
<pre class="highlight"><code class="language-xml" data-lang="xml">&lt;form&gt;
  &lt;field-set&gt;schema goes here...&lt;/field-set&gt;
&lt;/form&gt;</code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="content_scope"><a class="link" href="#content_scope">Content scope</a></h3>
<div class="paragraph">
<p>For all schemas in XP 6, the input types <a href="#../cms/schemas/input-types/contentselector">contentSelectors</a> and <a href="#../cms/schemas/input-types/tag">tag</a> defaulted to selecting content across the entire repository.
The default scope is now reduced to the parent site.</p>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
mediaSelectors and contentSelector in rich text area still allows selection of content across the entire repository
</td>
</tr>
</table>
</div>
<div class="paragraph">
<p>This change is made to reduce confusion (too much to select), and prevent users from erroneously linking to content outside the site.
If you are fine with the new default behavior, no changes need to be made. If not, simply customize the allowPath for your input types.</p>
</div>
</div>
<div class="sect2">
<h3 id="mixins"><a class="link" href="#mixins">Mixins</a></h3>
<div class="paragraph">
<p>As part of the consolidated schema format, the <code>&lt;items&gt;</code> element of mixins has been replaced by <code>&lt;form&gt;</code>.
Upgrade your mixin definitions to match the new format:</p>
</div>
<div class="listingblock">
<div class="title">Old mixin using &lt;items&gt;</div>
<div class="content">
<pre class="highlight"><code class="language-xml" data-lang="xml">&lt;mixin&gt;
  &lt;items&gt;schema goes here...&lt;/items&gt;
&lt;/mixin&gt;</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">New mixin using &lt;form&gt;</div>
<div class="content">
<pre class="highlight"><code class="language-xml" data-lang="xml">&lt;mixin&gt;
  &lt;form&gt;schema goes here...&lt;/form&gt;
&lt;/mixin&gt;</code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="inline"><a class="link" href="#inline">Inline</a></h3>
<div class="paragraph">
<p>With XP 7, the <code>&lt;inline&gt;</code> concept is directly replaced by <code>&lt;mixin&gt;</code>.</p>
</div>
<div class="paragraph">
<p>Update any schemas using <code>&lt;inline&gt;</code> to match the new format:</p>
</div>
<div class="listingblock">
<div class="title">Old schema using inline</div>
<div class="content">
<pre class="highlight"><code class="language-xml" data-lang="xml">&lt;form&gt;
  &lt;inline mixin="mymixin"/&gt;
&lt;/form&gt;</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">New schema using mixin</div>
<div class="content">
<pre class="highlight"><code class="language-xml" data-lang="xml">&lt;form&gt;
  &lt;mixin name="mymixin"/&gt;
&lt;/form&gt;</code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="display_name_script"><a class="link" href="#display_name_script">Display name script</a></h3>
<div class="paragraph">
<p>The display name script is used to generate the display name from other content type text inputs.
The old <code>&lt;content-display-name-script&gt;</code> field is deprecated, and replaced by a new field <code>&lt;display-name-expression&gt;</code> that supports ES 6 template literals
which means that you can now combine field values with static text.</p>
</div>
<div class="listingblock">
<div class="title">Old contenttype.xml</div>
<div class="content">
<pre class="highlight"><code class="language-JavaScript" data-lang="JavaScript">  &lt;content-display-name-script&gt;$('firstName', 'middleName', 'lastName')&lt;/content-display-name-script&gt;</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">New contenttype.xml</div>
<div class="content">
<pre class="highlight"><code class="language-JavaScript" data-lang="JavaScript">  &lt;display-name-expression&gt;My name is ${firstName} ${middleName} ${lastName}&lt;/display-name-expression&gt;</code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="customselector_update"><a class="link" href="#customselector_update">CustomSelector update</a></h3>
<div class="paragraph">
<p>If your application implements a CustomSelector, a small change has been made to simplify code.</p>
</div>
<div class="paragraph">
<p>The <code>ids</code> parameter in the request has changed from JSON string to regular string.
Update your code to support the new format:</p>
</div>
<div class="listingblock">
<div class="title">Old customSelector format</div>
<div class="content">
<pre class="highlight"><code class="language-JavaScript" data-lang="JavaScript">getParams(): Object {
    return {
        ids: JSON.stringify(this.ids),
        query: this.query || null,
        start: this.start || null,
        count: this.count || null
    };
}</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">New customSelector format</div>
<div class="content">
<pre class="highlight"><code class="language-JavaScript" data-lang="JavaScript">getParams(): Object {
    return {
        ids: this.ids.toString(),
        query: this.query || null,
        start: this.start || null,
        count: this.count || null
    };
}</code></pre>
</div>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="4_x_data"><a class="link" href="#4_x_data">4. X-data</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>In XP 7, X-data no longer refers to mixins, but are rather created as specific x-data definitions instead.
If your application uses X-data, make the following changes to your project:</p>
</div>
<div class="sect2">
<h3 id="x_data_folder"><a class="link" href="#x_data_folder">x-data folder</a></h3>
<div class="paragraph">
<p>Identify all mixins referenced by X-data entries in your project (site.xml or content types)
Move these mixins into a new folder structure, where each x-data entry gets its own folder:</p>
</div>
<div class="listingblock">
<div class="title">Old folder structure</div>
<div class="content">
<pre class="highlight"><code class="language-files" data-lang="files">resources/
  sites/
    mixins/
      address.xml
      shipping.xml
      not-used-as-xdata.xml</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">New folder structure</div>
<div class="content">
<pre class="highlight"><code class="language-files" data-lang="files">resources/
  sites/
    mixins/
      not-used-as-xdata.xml
    x-data/
      address/
        address.xml
      shipping/
        shipping.xml</code></pre>
</div>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
For mixins used as both &lt;mixin&gt; and &lt;x-data&gt;, a copy of the mixin must remain in the mixins/ folder. Simply reference the mixin from the new x-data definition instead.
</td>
</tr>
</table>
</div>
</div>
<div class="sect2">
<h3 id="x_data_format"><a class="link" href="#x_data_format">X-data format</a></h3>
<div class="paragraph">
<p>The following changes are made to the format:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><code>&lt;allowContentType&gt;</code> config has been replaced by attribute of the same name on x-data reference in <code>site.xml</code></p>
</li>
<li>
<p>Root element is changed from <code>&lt;mixin&gt;</code> to <code>&lt;x-data&gt;</code></p>
</li>
<li>
<p>x-data reference attribute is renamed from "<em>mixin</em>" to "<em>name</em>"</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>Upgrade your X-data references as follows:</p>
</div>
<div class="listingblock">
<div class="title">Old mixins/my-sample.xml</div>
<div class="content">
<pre class="highlight"><code class="language-xml" data-lang="xml">&lt;mixin&gt;
  &lt;allowContentType&gt;*:folder&lt;/allowContentType&gt;
  &lt;items&gt;Schema goes here..&lt;/items&gt;
&lt;/mixin&gt;</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">Old site.xml</div>
<div class="content">
<pre class="highlight"><code class="language-xml" data-lang="xml">&lt;site&gt;
  &lt;x-data mixin="my-sample"&gt;
&lt;/site&gt;</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">New /x-data/my-sample/my-sample.xml</div>
<div class="content">
<pre class="highlight"><code class="language-xml" data-lang="xml">&lt;x-data&gt;
  &lt;form&gt;Schema goes here..&lt;/form&gt;
&lt;/x-data&gt;</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">New site.xml</div>
<div class="content">
<pre class="highlight"><code class="language-xml" data-lang="xml">&lt;site&gt;
  &lt;x-data name="my-sample" allowContentTypes=".*:folder" optional="true"&gt;
&lt;/site&gt;</code></pre>
</div>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
Multiple allow entries can be added, separated by <code>|</code>
</td>
</tr>
</table>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="5_rich_text_editor"><a class="link" href="#5_rich_text_editor">5. Rich text editor</a></h2>
<div class="sectionbody">
<div class="sect2">
<h3 id="image_styles"><a class="link" href="#image_styles">Image styles</a></h3>
<div class="paragraph">
<p>For projects using the rich text editor,
XP 7 introduces a new feature called <em>Image styles</em>.
XP 6 provided editors with a dropdown option list for image "styles" when inserting images in the rich text editor.
However, this list was hardcoded.
With XP 7, developers are now able to customize this list with their own styles.</p>
</div>
<div class="paragraph">
<p>By default the only available styles are:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>None (uncropped, but optimized image, no client-side processing)</p>
</li>
<li>
<p>Original (unprocessed original image file, CSS style <em>.editor-style-original</em>)</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>Editors of existing sites are likely to have used one or more of the XP 6 hardcoded styles.
Migrated images will still keep the cropping from XP 6.
However, to support inserting new images with the same style formats, add this file to your project:</p>
</div>
<div class="listingblock">
<div class="title">/site/styles.xml</div>
<div class="content">
<pre class="highlight"><code class="language-xml" data-lang="xml">&lt;styles xmlns="urn:enonic:xp:model:1.0"&gt;
  &lt;image name="editor-image-cinema"&gt;
    &lt;display-name&gt;Cinema&lt;/display-name&gt;
    &lt;aspect-ratio&gt;21:9&lt;/aspect-ratio&gt;
  &lt;/image&gt;
  &lt;image name="editor-image-widescreen"&gt;
    &lt;display-name&gt;Widescreen&lt;/display-name&gt;
    &lt;aspect-ratio&gt;16:9&lt;/aspect-ratio&gt;
  &lt;/image&gt;
  &lt;image name="editor-image-regular"&gt;
    &lt;display-name&gt;Regular&lt;/display-name&gt;
    &lt;aspect-ratio&gt;4:3&lt;/aspect-ratio&gt;
  &lt;/image&gt;
  &lt;image name="editor-image-square"&gt;
    &lt;display-name&gt;Square&lt;/display-name&gt;
    &lt;aspect-ratio&gt;1:1&lt;/aspect-ratio&gt;
  &lt;/image&gt;
  &lt;image name="editor-image-portrait"&gt;
    &lt;display-name&gt;Portrait&lt;/display-name&gt;
    &lt;aspect-ratio&gt;3:4&lt;/aspect-ratio&gt;
  &lt;/image&gt;
  &lt;image name="editor-image-tall"&gt;
    &lt;display-name&gt;Tall&lt;/display-name&gt;
    &lt;aspect-ratio&gt;9:16&lt;/aspect-ratio&gt;
  &lt;/image&gt;
  &lt;image name="editor-image-skyscraper"&gt;
    &lt;display-name&gt;Skyscraper&lt;/display-name&gt;
    &lt;aspect-ratio&gt;9:21&lt;/aspect-ratio&gt;
  &lt;/image&gt;
&lt;/styles&gt;</code></pre>
</div>
</div>
<div class="paragraph">
<p>Image styles also introduce the ability to use image service filters, and client side CSS styles that are used by the editor.</p>
</div>
<div class="paragraph">
<p>Read more about Image styles <a href="https://developer.enonic.com/docs/content-studio/stable/editor/rich-text-editor">here</a></p>
</div>
</div>
<div class="sect2">
<h3 id="editor_xss"><a class="link" href="#editor_xss">Editor XSS</a></h3>
<div class="paragraph">
<p>The XP 6 html editor allows users to add <code>&lt;script&gt;</code> and <code>&lt;iframe&gt;</code> tags to the source code.</p>
</div>
<div class="paragraph">
<p>New version of Content Studio shipped XP 7 automatically removes any <code>&lt;script&gt;</code> and <code>&lt;iframe&gt;</code> tags from the source code.
This measurement effectively reduces the attack surface of Enonic XP.
This also removes any scripts from documents migrated from XP 6 on first save.</p>
</div>
<div class="paragraph">
<p>Iframes can still be added through the use of the iframe macro.</p>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
Re-enable support for <code>&lt;script&gt;</code> in html fields at own risk by following receipt below:
</td>
</tr>
</table>
</div>
<div class="paragraph">
<p>Add a content studio config file (<em>com.enonic.app.contentstudio.cfg</em>) to <em>XP_HOME/config</em> folder , with the following settings:</p>
</div>
<div class="listingblock">
<div class="title">com.enonic.app.contentstudio.cfg</div>
<div class="content">
<pre class="highlight"><code class="language-properties" data-lang="properties">htmlinput.allowScripts = true</code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="standard_classes"><a class="link" href="#standard_classes">Standard Classes</a></h3>
<div class="paragraph">
<p>XP 7 renames the standard editor classes for alignment and images.</p>
</div>
<div class="paragraph">
<p>Changing some properties of an image might result in applying specific built-in CSS styles to the <code>&lt;figure&gt;</code> element:</p>
</div>
<table class="tableblock frame-all grid-all stretch">
<caption class="title">Table 1. Built-in editor CSS styles</caption>
<colgroup>
<col style="width: 50%;">
<col style="width: 50%;">
</colgroup>
<thead>
<tr>
<th class="tableblock halign-left valign-top">Property</th>
<th class="tableblock halign-left valign-top">Style</th>
</tr>
</thead>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">"Justify" alignment</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><em>.editor-align-justify</em></p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">"Left" alignment</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><em>.editor-align-left</em></p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">"Center" alignment</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><em>.editor-align-center</em></p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">"Right" alignment</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><em>.editor-align-right</em></p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">Custom width</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><em>.editor-width-custom</em></p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">"Original" image style</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><em>.editor-style-original</em></p></td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="sect1">
<h2 id="6_site_engine"><a class="link" href="#6_site_engine">6. Site engine</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>The site rendering engine and content model has been updated and may impact your project.</p>
</div>
<div class="sect2">
<h3 id="flattened_page_components"><a class="link" href="#flattened_page_components">Flattened page components</a></h3>
<div class="paragraph">
<p>XP 6 persisted the component tree structure (domain model) on a 1 to 1 basis.
In XP 7, the page structure is now persisted as a flat structure in the underlying node API.
The motivation behind this change is to simplify searching for component specific data.</p>
</div>
<div class="paragraph">
<p>For instance, one may now easily search for items using a specific part, or layout.</p>
</div>
<div class="paragraph">
<p>For most projects, the rendering functionality is fully backward compatible.
However, if you have implemented specific code that deals with the page domain, you may need to update your code.</p>
</div>
<div class="paragraph">
<p>The changes to the JSON data model are as follows:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Page (root component) now includes the path field also</p>
</li>
<li>
<p>Page controller field is renamed to "descriptor" for consistency</p>
</li>
<li>
<p>Component "name" fields are removed from the structure</p>
</li>
<li>
<p>Fragment, Text and Image components no longer have an empty config field</p>
</li>
<li>
<p>A page referring to a template can no longer include region and other page data</p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="response_filters"><a class="link" href="#response_filters">Response filters</a></h3>
<div class="paragraph">
<p>XP 7 introduces generic site filters. To avoid confusion, the XP 6 response filters for pages have been renamed to response processors.
If your project uses response filters, you must perform the following updates of your project:</p>
</div>
<div class="sect3">
<h4 id="move_files"><a class="link" href="#move_files">Move files</a></h4>
<div class="paragraph">
<p>Update your project structure by renaming the <em>filters</em> folder from <code>/src/main/resources/site/filters</code> to <code>`/src/main/resources/site/processors</code></p>
</div>
</div>
<div class="sect3">
<h4 id="update_site_xml"><a class="link" href="#update_site_xml">Update site.xml</a></h4>
<div class="paragraph">
<p>The schema definitions have also changed:</p>
</div>
<div class="listingblock">
<div class="title">Old site.xml</div>
<div class="content">
<pre class="highlight"><code class="language-xml" data-lang="xml">&lt;site&gt;
  ...
  &lt;filters&gt;
    &lt;response-filter name="bgcolor" order="10"/&gt;
    &lt;response-filter name="app-header" order="10"/&gt;
  &lt;/filters&gt;
  ...
&lt;/site&gt;</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">New site.xml</div>
<div class="content">
<pre class="highlight"><code class="language-xml" data-lang="xml">&lt;site&gt;
  ...
  &lt;processors&gt;
    &lt;response-processor name="bgcolor" order="10"/&gt;
    &lt;response-processor name="app-header" order="10"/&gt;
  &lt;/processors&gt;
  ...
&lt;/site&gt;</code></pre>
</div>
</div>
</div>
<div class="sect3">
<h4 id="update_controllers"><a class="link" href="#update_controllers">Update controllers</a></h4>
<div class="paragraph">
<p>Finally, the JS controllers must now export a responseProcessor, rather than a responseFilter</p>
</div>
<div class="listingblock">
<div class="title">Old filter.js</div>
<div class="content">
<pre class="highlight"><code class="language-javascript" data-lang="javascript">exports.responseFilter = function (req, res) {
// code goes here...
}</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">New processor.js</div>
<div class="content">
<pre class="highlight"><code class="language-javascript" data-lang="javascript">exports.responseProcessor = function (req, res) {
// code goes here...
}</code></pre>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="render_mode"><a class="link" href="#render_mode">Render mode</a></h3>
<div class="paragraph">
<p>When the site engine is rendering pages, a so-called render mode is part of the request object.
Until now, the render modes have been: <code>PREVIEW</code>, <code>EDIT</code> and <code>LIVE</code></p>
</div>
<div class="paragraph">
<p>With XP 7, the <code>INLINE</code> render mode is introduced.
<code>INLINE</code> mode is exclusively used when a preview is rendered in the context of Content Studio browse view.
Previously, this rendering would be using mode <code>PREVIEW</code>.</p>
</div>
<div class="paragraph">
<p><code>PREVIEW</code>is now exclusively used in the standalone fullscreen preview summoned by the user clicking btn:[Preview].</p>
</div>
<div class="paragraph">
<p>This change allows developers to be able to treat rendering differently when rendered inline vs a full preview.</p>
</div>
<div class="paragraph">
<p>If your application has implemented specific behavior for <code>PREVIEW</code> mode,
consider doing the same for <code>INLINE</code> modes to keep current functionality.</p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="7_js_controllers"><a class="link" href="#7_js_controllers">7. JS Controllers</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>If your project contains Javascript controllers, the following issues must be checked:</p>
</div>
<div class="sect2">
<h3 id="userstores_and_idproviders"><a class="link" href="#userstores_and_idproviders">Userstores and IDproviders</a></h3>
<div class="paragraph">
<p>For better consistency, userstores are now called IDproviders.
If your project makes use of lib-auth, lib-context or lib-portal, or otherwise refers to "userStore" by name, you will need to upate your code:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>For usage of Lib-auth, Lib-context and Lib-portal</p>
</li>
<li>
<p>search and replace the text "userStore" with "idProvider" in your code.</p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="content_library"><a class="link" href="#content_library">Content Library</a></h3>
<div class="paragraph">
<p>The <code>branch</code> parameter has also been removed from the content library.
To connect to a different branch, simply use context library instead</p>
</div>
</div>
<div class="sect2">
<h3 id="new_cms_repo"><a class="link" href="#new_cms_repo">New CMS repo</a></h3>
<div class="paragraph">
<p>With XP 7, the default CMS repo is renamed from <code>cms-repo</code> to <code>com.enonic.cms.default</code>.
This is done to prepare for use of multiple repos, where all CMS repos will be prefixed with <code>com.enonic.cms</code></p>
</div>
<div class="paragraph">
<p>If your project connects directly to a CMS repo, i.e. through the node API, ensure that you are still connecting to the right repository.</p>
</div>
</div>
<div class="sect2">
<h3 id="main_js"><a class="link" href="#main_js">Main.js</a></h3>
<div class="paragraph">
<p>If you project contains a <em>/src/main/resources/main.js</em> file, you might need to update it.</p>
</div>
<div class="paragraph">
<p>With XP 7, a dedicated web app controller <em>/src/main/resources/webapp/webapp.js</em> is introduced.
If your current project was a webapp, you will find that your main.js file exports one or more HTTP methods, like <code>GET`or `POST</code>.</p>
</div>
<div class="paragraph">
<p>Split your <em>main.js</em> file in two:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>All HTTP require statements must be moved to the webapp.js</p>
</li>
<li>
<p>Only life cycle related code should remain in main.js.</p>
</li>
</ul>
</div>
</div>
<div class="sect2">
<h3 id="require_resolving"><a class="link" href="#require_resolving">Require() resolving</a></h3>
<div class="paragraph">
<p>Enonic XP has used the same require() script resolving patterns since the release of XP 5.
Strategies for resolving scripts have since been simplified, and with 7.0 breaking changes have been implemented.</p>
</div>
<div class="paragraph">
<p>The change specifically affects relative paths, the resolver was automatically scanning for files in /site and /lib folders.
This is now changed, and the resolver will only look for relative files in current directory.</p>
</div>
<div class="paragraph">
<p>Verify that that your require statements are referring to absolute paths, or that the specific files are located in the current directory.</p>
</div>
<div class="paragraph">
<p>Also, please check out the documentation of the <a href="../framework/globals.ahtml#require">require function</a>.</p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="8_assets_and_services"><a class="link" href="#8_assets_and_services">8. Assets and services</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>Assets and services must now exclusively be placed on the resources/ level.
If your projects have assets/ and services/ folders within resources/site/ - their content must be moved/merged into respective folders on the resource/ level.</p>
</div>
<div class="listingblock">
<div class="title">Old sample project structure</div>
<div class="content">
<pre class="highlight"><code class="language-files" data-lang="files">src/
  main/
    resources/
      assets/
        animation.gif
      services/
        coolservice/
          coolservice.xml
          coolservice.js
      site/
        assets/
          mystyles.css
          myscript.js
        services/
          myservice/
            myservice.js
            myservice.xml
        other/</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">New sample project structure</div>
<div class="content">
<pre class="highlight"><code class="language-files" data-lang="files">src/
  main/
    resources/
      assets/
        animation.gif
        mystyles.css
        myscript.js
      services/
        coolservice/
          coolservice.xml
          coolservice.js
        myservice/
          myservice.js
          myservice.xml
      site/
        other/</code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="10_widgets"><a class="link" href="#10_widgets">10. Widgets</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>The "Detail panel" of XP 6 Content Studio has been refactored, and is now called the "Context panel".
With XP 7, this panel is now available in both Content Studio tree view, and in the content editor.</p>
</div>
<div class="paragraph">
<p>If your application implements a detail panel widget (located in src/main/resources/admin/widgets/), you will need to upgrade it as follows:</p>
</div>
<div class="sect2">
<h3 id="widget_html"><a class="link" href="#widget_html">Widget HTML</a></h3>
<div class="paragraph">
<p>Root element of widget HTML template has changed from <code>&lt;body&gt;</code> to <code>&lt;widget&gt;</code>. Make sure that <code>&lt;link&gt;</code> element injecting widget&#8217;s stylesheets is inside the <code>&lt;widget&gt;&lt;/widget&gt;</code> element.</p>
</div>
<div class="listingblock">
<div class="title">Old widget.html</div>
<div class="content">
<pre class="highlight"><code class="language-html" data-lang="html">&lt;link rel="stylesheet" th:href="${widgetCssUrl}" type="text/css"/&gt;
&lt;body&gt;
    &lt;p&gt;Hello World!&lt;/p&gt;
&lt;/body&gt;</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">New widget.html</div>
<div class="content">
<pre class="highlight"><code class="language-html" data-lang="html">&lt;widget&gt;
    &lt;link rel="stylesheet" th:href="${widgetCssUrl}" type="text/css"/&gt;
    &lt;p&gt;Hello World!&lt;/p&gt;
&lt;/widget&gt;</code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="implements"><a class="link" href="#implements">Implements</a></h3>
<div class="paragraph">
<p>Widget interface (in the widget&#8217;s XML schema) is to be renamed from <code>com.enonic.xp.content-manager.context-widget</code> (old version) or <code>contentstudio.detailpanel</code> (XP 6.x version)
to <code>contentstudio.contextpanel</code>.</p>
</div>
<div class="listingblock">
<div class="title">mywidget.xml</div>
<div class="content">
<pre class="highlight"><code class="language-xml" data-lang="xml">&lt;widget&gt;
  &lt;display-name&gt;My Widget&lt;/display-name&gt;
  &lt;description&gt;Awesome widget that does nothing&lt;/description&gt;
  &lt;interfaces&gt;
    &lt;interface&gt;contentstudio.contextpanel&lt;/interface&gt;
  &lt;/interfaces&gt;
&lt;/widget&gt;</code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="widget_icon_and_description"><a class="link" href="#widget_icon_and_description">Widget icon and description</a></h3>
<div class="paragraph">
<p>XP 7 supports widget icon and description that will be shown inside the widget selector inside Content Studio.
To enable a description, add <code>&lt;description&gt;&lt;/description&gt;</code> field to the widget schema as shown in the example above.
To enable an icon place the image file (SVG or PNG) called by the same name as the widget inside the widget&#8217;s folder.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-files" data-lang="files">src/
  main/
    resources/
      admin/
        widgets/
            mywidget/
                mywidget.html
                mywidget.js
                mywidget.svg
                mywidget.xml</code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="no_context"><a class="link" href="#no_context">No context</a></h3>
<div class="paragraph">
<p>Starting from XP 7, contents of the selected widget will be displayed in the Content Studio&#8217;s context panel even when no content is selected in the content tree.
Developer of the widget must take care of that and implement necessary validation/feedback if the widget requires contentId (by checking value in <code>params.contentId</code>
in the <code>request</code> object).</p>
</div>
<div class="listingblock">
<div class="title">mywidget.js</div>
<div class="content">
<pre class="highlight"><code class="language-JavaScript" data-lang="JavaScript">function handleGet(req) {

    var contentId = req.params.contentId;

    if (!contentId &amp;&amp; portalLib.getContent()) {
        contentId = portalLib.getContent()._id;
    }

    if (!contentId) {
        return {
            contentType: 'text/html',
            body: '&lt;widget class="error"&gt;No content selected&lt;/widget&gt;'
        };
    }

    // Further processing
    ...
}</code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="widget_in_the_dom"><a class="link" href="#widget_in_the_dom">Widget in the DOM</a></h3>
<div class="paragraph">
<p>Parameter <code>uuid</code> will no longer be sent to the widget from Content Studio. Before XP 7 several instances of the same widget element could technically be present in the DOM
and <code>uuid</code> could be used to locate the correct element. Consider the following way to locate widget element in the DOM:</p>
</div>
<div class="listingblock">
<div class="title">mywidget.html</div>
<div class="content">
<pre class="highlight"><code class="language-HTML" data-lang="HTML">    &lt;widget data-th-id="${'widget-' + widgetId}"&gt;
      ... widget body...
    &lt;/widget&gt;

    &lt;script data-th-inline="javascript"&gt;
        /*&lt;![CDATA[*/
        var CONFIG = {
            widgetId: [[${widgetId}]]
        };

        /*]]&gt;*/
    &lt;/script&gt;</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">mywidget.js</div>
<div class="content">
<pre class="highlight"><code class="language-JavaScript" data-lang="JavaScript">    var view = resolve('mywidget.html');
    var params = {
        widgetId: app.name
    };

    return {
        contentType: 'text/html',
        body: thymeleaf.render(view, params)
    };
}</code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">asset.js</div>
<div class="content">
<pre class="highlight"><code class="language-JavaScript" data-lang="JavaScript">    window['HTMLImports'].whenReady(function() {
        const widgetId = CONFIG.widgetId;
        const widgetContainer = document.getElementById(`widget-${widgetId}`);

        if (widgetContainer) {
            ...
        }
    });</code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="repo_context"><a class="link" href="#repo_context">Repo context</a></h3>
<div class="paragraph">
<p>XP 7 is prepared for using multiple CMS repositories.
As such, a widget must be able to determine which repository it should connect to and which branch (master or draft) the content is in.
This info is now available in the <code>request</code> parameter.</p>
</div>
<div class="listingblock">
<div class="title">mywidget.js</div>
<div class="content">
<pre class="highlight"><code class="language-JavaScript" data-lang="JavaScript">function handleGet(req) {

    var contentId = req.params.contentId;

    if (!contentId &amp;&amp; portalLib.getContent()) {
        contentId = portalLib.getContent()._id;
    }

    if (!contentId) {
        return {
            contentType: 'text/html',
            body: '&lt;widget class="error"&gt;No content selected&lt;/widget&gt;'
        };
    }

    var repo = req.params.repository;
    var branch = req.params.branch;

    var nodeLib = require('/lib/xp/node');

    // Connect to repo
    var repo = nodeLib.connect({
        repoId: repo,
        branch: branch
    });

    // Work with the repo
    ...
}</code></pre>
</div>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="11_jdk"><a class="link" href="#11_jdk">11. JDK</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>Where XP 6.x depends on Java 8 to be installed, XP 7 bundles Java 11 in the distro package.</p>
</div>
<div class="paragraph">
<p>The first time you use Enonic CLI to create a new XP project you will be asked to create a sandbox for a specific version of XP.
The new sandbox will have Java 11 bundled inside the package and you don&#8217;t have to worry about whether you have Java installed or not.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="12_testing_api"><a class="link" href="#12_testing_api">12. Testing API</a></h2>
<div class="sectionbody">
<div class="paragraph">
<p>If you are using Enonic testing API (<code>com.enonic.xp:testing</code>), you need to change imports.</p>
</div>
<div class="listingblock">
<div class="title">In Javascript test class:</div>
<div class="content">
<pre class="highlight"><code class="language-JavaScript" data-lang="JavaScript">var assert = require('/lib/xp/assert');</code></pre>
</div>
</div>
<div class="paragraph">
<p>to</p>
</div>
<div class="listingblock">
<div class="content">
<pre>var assert = require('/lib/xp/testing');</pre>
</div>
</div>
<div class="listingblock">
<div class="title">In Java test class:</div>
<div class="content">
<pre class="highlight"><code class="language-Java" data-lang="Java">import com.enonic.xp.testing.script.ScriptRunnerSupport;</code></pre>
</div>
</div>
<div class="paragraph">
<p>to</p>
</div>
<div class="listingblock">
<div class="content">
<pre>import com.enonic.xp.testing.ScriptRunnerSupport;</pre>
</div>
</div>
</div>
</div>
</div>
<div id="footer">
<div id="footer-text">
Last updated 2025-06-05 16:42:05 UTC
</div>
</div>
</body>
</html>